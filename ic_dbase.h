// Generated by dbase_conv.py

const char decode_tokens[] PROGMEM = "00110110HHLLLHHLL0L1H0H1C00HG00L1L0GXXHG1HGHGCGL1GV Z1Z0ZZ";
// 74273 : Octal D-type flip-flop with clear
const char name_74273[] PROGMEM = "74273";
const char tests_74273[] PROGMEM = \
	"pafaLwLafaLzpbfbLwLbfbLzqafaLwLafaLzubebtCHbebHzudfaLwLafcHzqchaLwLagdLzqagdLwLchaLzqafctCHdfaLzqagbtCLagbHzubhaLwHbhaLzubedLwLcebHzubhctCHdgbHzudgbtCHbhcHzqcebtCHbedLV";

//	"0L00LL00LGCL00LL00LV " \
//	"0L11LL11LGCL11LL11LV " \
//	"1L00LL00LGCL00LL00LV " \
//	"1H11HH11HGCH11HH11HV " \
//	"1H10LL00LGCL00LL01HV " \
//	"1L01HL00LGCL00LH10LV " \
//	"1L00LH10LGCL01HL00LV " \
//	"1L00LL01HGCH10LL00LV " \
//	"1L00LH11HGCL00LH11HV " \
//	"1H11HL00LGCH11HL00LV " \
//	"1H11HH10LGCL01HH11HV " \
//	"1H11HL01HGCH10LH11HV " \
//	"1H10LH11HGCH11HL01HV " \
//	"1L01HH11HGCH11HH10LV";

// 74373 : Octal D-type transparent latch with 3-state output control
const char name_74373[] PROGMEM = "74373";
const char tests_74373[] PROGMEM = \
	"pafaLGqafaLznbebtubebHzpchctqchcHzndgdLGudgdLzFDLafaLGALafaLzFDHbebtAHbebHzFDLchctALchcHzFDHdgdLGAHdgdLz1Zb}bZG1Zb}bZz1Za}aZG1Za}aZz1Zd}dZG1Zd}dZz1Zc}cZG1Zc}cZV";

//	"0L00LL00LG1L00LL00LV " \
//	"0H11HH11HG1H11HH11HV " \
//	"0L01HL01HG1L01HL01HV " \
//	"0H10LH10LG1H10LH10LV " \
//	"FDL00LL00LGAL00LL00LV " \
//	"FDH11HH11HGAH11HH11HV " \
//	"FDL01HL01HGAL01HL01HV " \
//	"FDH10LH10LGAH10LH10LV " \
//	"1Z11ZZ11ZG1Z11ZZ11ZV " \
//	"1Z00ZZ00ZG1Z00ZZ00ZV " \
//	"1Z10ZZ10ZG1Z10ZZ10ZV " \
//	"1Z01ZZ01ZG1Z01ZZ01ZV";

// 74374 : Octal D-type flip-flop with 3-state output control
const char name_74374[] PROGMEM = "74374";
const char tests_74374[] PROGMEM = \
	"pafaLwLafaLznbebtCHbebHzFDLafaLwLafaLzFDHbebtCHbebHzFDLchctCLchcHzFDHdgdLwHdgdLz1Zb}bZG1Zb}bZz1Za}aZG1Za}aZz1Zd}dZoZd}dZz1Zc}cZoZc}cZV";

//	"0L00LL00LGCL00LL00LV " \
//	"0H11HH11HGCH11HH11HV " \
//	"FDL00LL00LGCL00LL00LV " \
//	"FDH11HH11HGCH11HH11HV " \
//	"FDL01HL01HGCL01HL01HV " \
//	"FDH10LH10LGCH10LH10LV " \
//	"1Z11ZZ11ZG1Z11ZZ11ZV " \
//	"1Z00ZZ00ZG1Z00ZZ00ZV " \
//	"1Z10ZZ10ZG0Z10ZZ10ZV " \
//	"1Z01ZZ01ZG0Z01ZZ01ZV";

// 74240 : 3-State Octal bus transceiver (2 groups of 4 lines) - inverting outputs
const char name_74240[] PROGMEM = "74240";
const char tests_74240[] PROGMEM = \
	"D0kkkHokkkHDzD1jjjLG1jjjLDzD0iiiLG1lllHDzD1lllHoiiiLDzD0kljLG1jikHDzD1jikHokljLDzD0ijlHoijlHDzD1lkiLG1lkiLDzE0kkkHo|||ZDzE1jjjLG1{{{ZDzD0|||ZokkkHEzD1{{{ZG1jjjLEzE0|||Zo|||ZEzE1{{{ZG1{{{ZEV";

//	"D0H0H0H0HG0H0H0H0HDV " \
//	"D1L1L1L1LG1L1L1L1LDV " \
//	"D0L0L0L0LG1H1H1H1HDV " \
//	"D1H1H1H1HG0L0L0L0LDV " \
//	"D0H0H1L1LG1L1L0H0HDV " \
//	"D1L1L0H0HG0H0H1L1LDV " \
//	"D0L0L1H1HG0L0L1H1HDV " \
//	"D1H1H0L0LG1H1H0L0LDV " \
//	"E0H0H0H0HG0Z0Z0Z0ZDV " \
//	"E1L1L1L1LG1Z1Z1Z1ZDV " \
//	"D0Z0Z0Z0ZG0H0H0H0HEV " \
//	"D1Z1Z1Z1ZG1L1L1L1LEV " \
//	"E0Z0Z0Z0ZG0Z0Z0Z0ZEV " \
//	"E1Z1Z1Z1ZG1Z1Z1Z1ZEV";

// 74244 : 3-State Octal bus transceiver (2 groups of 4 lines) - non inverting outputs
const char name_74244[] PROGMEM = "74244";
const char tests_74244[] PROGMEM = \
	"D0iiiLoiiiLDzD1lllt1lllHDzD0kkkt1jjjLDzD1jjjLokkkHDzD0ijlt1lkiLDzD1lkiLoijlHDzD0kljLokljLDzD1jikt1jikHDzE0iiiLo|||ZDzE1lllt1{{{ZDzD0|||ZoiiiLEzD1{{{ZG1lllHEzE0|||Zo|||ZEzE1{{{ZG1{{{ZEV";

//	"D0L0L0L0LG0L0L0L0LDV " \
//	"D1H1H1H1HG1H1H1H1HDV " \
//	"D0H0H0H0HG1L1L1L1LDV " \
//	"D1L1L1L1LG0H0H0H0HDV " \
//	"D0L0L1H1HG1H1H0L0LDV " \
//	"D1H1H0L0LG0L0L1H1HDV " \
//	"D0H0H1L1LG0H0H1L1LDV " \
//	"D1L1L0H0HG1L1L0H0HDV " \
//	"E0L0L0L0LG0Z0Z0Z0ZDV " \
//	"E1H1H1H1HG1Z1Z1Z1ZDV " \
//	"D0Z0Z0Z0ZG0L0L0L0LEV " \
//	"D1Z1Z1Z1ZG1H1H1H1HEV " \
//	"E0Z0Z0Z0ZG0Z0Z0Z0ZEV " \
//	"E1Z1Z1Z1ZG1Z1Z1Z1ZEV";

// 74245 : 3-State Octal bus transceiver
const char name_74245[] PROGMEM = "74245";
const char tests_74245[] PROGMEM = \
	"1--G//Dz++y**Dz+1-G/*Dz1-+G*/Dzb1abaGfefeDz1ababGefefDzbcccrggggDz1ccccvgggLDz0//G--Dz0**G++Dz0*/G-+Dz0/*G+-Dz0efefGababDz0fefeGbabaDzngggLGccccDz0ggggG1ccc0Dz1--G[[Ez++y[[Ez0[[G--Ez0[[G++Ez0[[GbabaEz0[[G1ccc0Ez0[[GccccEV";

//	"100000000GLLLLLLLLDV " \
//	"111111111GHHHHHHHHDV " \
//	"111110000GLLLLHHHHDV " \
//	"100001111GHHHHLLLLDV " \
//	"111001100GLLHHLLHHDV " \
//	"100110011GHHLLHHLLDV " \
//	"110101010GLHLHLHLHDV " \
//	"101010101GHLHLHLHLDV " \
//	"0LLLLLLLLG00000000DV " \
//	"0HHHHHHHHG11111111DV " \
//	"0HHHHLLLLG00001111DV " \
//	"0LLLLHHHHG11110000DV " \
//	"0HHLLHHLLG00110011DV " \
//	"0LLHHLLHHG11001100DV " \
//	"0HLHLHLHLG01010101DV " \
//	"0LHLHLHLHG10101010DV " \
//	"100000000GZZZZZZZZEV " \
//	"111111111GZZZZZZZZEV " \
//	"0ZZZZZZZZG00000000EV " \
//	"0ZZZZZZZZG11111111EV " \
//	"0ZZZZZZZZG11001100EV " \
//	"0ZZZZZZZZG10101010EV " \
//	"0ZZZZZZZZG01010101EV";

// 4000 : Dual 3-input NOR gate and inverter
const char name_4000[] PROGMEM = "4000";
const char tests_4000[] PROGMEM = \
	"-nG1ga0z-noea0z-qoh1azacpohc0za0bLohb0za1aLoha1za1cLoh1czabpoh0bzabqohb1V";

//	"00000HG1LH000V " \
//	"00000HG0HH000V " \
//	"00001LG0HL100V " \
//	"00010LG0HL010V " \
//	"00011LG0HL110V " \
//	"00100LG0HL001V " \
//	"00101LG0HL101V " \
//	"00110LG0HL011V " \
//	"00111LG0HL111V";

// 4001 : Quad 2-input NOR gate
const char name_4001[] PROGMEM = "4001";
const char tests_4001[] PROGMEM = \
	"aeaGaeazcfcGcfczdfdGdfdzbfbGbfbV";

//	"00HH00G00HH00V " \
//	"01LL01G01LL01V " \
//	"10LL10G10LL10V " \
//	"11LL11G11LL11V";

// 4002 : Dual 4-input NOR gates
const char name_4002[] PROGMEM = "4002";
const char tests_4002[] PROGMEM = \
	"Lac0obaLzLacrcapzLac0o+LzLabra0bLzLba0o+LzLcara1aLzL+0o+LzH-r-nzjcaGccpzLccra1cLV";

//	"L00010G01100LV " \
//	"L00010G01000LV " \
//	"L00010G01111LV " \
//	"L00110G00011LV " \
//	"L11000G01111LV " \
//	"L01000G00100LV " \
//	"L11110G01111LV " \
//	"H00000G00000HV " \
//	"L10100G01010LV " \
//	"L01010G00101LV";

// 4009 : Hex inverters with level shifted outputs
const char name_4009[] PROGMEM = "4009";
const char tests_4009[] PROGMEM = \
	"VkkkokHXnzVjjjG1jLXqV";

//	"VH0H0H0G0H0HX0HV " \
//	"VL1L1L1G1L1LX1LV";

// 4010 : Hex buffers with level shifted outputs
const char name_4010[] PROGMEM = "4010";
const char tests_4010[] PROGMEM = \
	"VlllG1lHXuzViiioiLXpV";

//	"VH1H1H1G1H1HX1HV " \
//	"VL0L0L0G0L0LX0LV";

// 40106 : Hex inverters with schmitt-trigger inputs
const char name_40106[] PROGMEM = "40106";
const char tests_40106[] PROGMEM = \
	"0kktkkkz1jjLGjjjV";

//	"0H0H0HGH0H0H0V " \
//	"1L1L1LGL1L1L1V";

// 4011 : Quad 2-input NAND gates
const char name_4011[] PROGMEM = "4011";
const char tests_4011[] PROGMEM = \
	"ahbGbgazdedGdedzcecGceczbgaGahbV";

//	"00HL11G11LH00V " \
//	"10HH10G10HH10V " \
//	"01HH01G01HH01V " \
//	"11LH00G00HL11V";

// 4012 : Dual 4-input NAND gates
const char name_4012[] PROGMEM = "4012";
const char tests_4012[] PROGMEM = \
	"H-XGX-Hzlc0XGX1cnzHccXGXccHzL+XGX+LV";

//	"H0000XGX0000HV " \
//	"H1010XGX1010HV " \
//	"H0101XGX0101HV " \
//	"L1111XGX1111LV";

// 4013 : Dual D flip-flop with set and reset
const char name_4013[] PROGMEM = "4013";
const char tests_4013[] PROGMEM = \
	"gC1aGa1ChzhCay1aCgzgCara0ChzhCcrc0CgV";

//	"LHC100G001CHLV " \
//	"HLC001G100CLHV " \
//	"LHC000G000CHLV " \
//	"HLC010G010CLHV";

// 4015 : Dual 4-bit serial-in parallel-out shift register with asynchronous reset
const char name_4015[] PROGMEM = "4015";
const char tests_4015[] PROGMEM = \
	"C/dw/dzCfgcwfgczCfecwfeczCLeHcwLeHczCehawehaV";

//	"CLLLL10GCLLLL10V " \
//	"CLLLH01GCLLLH01V " \
//	"CLLHH01GCLLHH01V " \
//	"CLHHH01GCLHHH01V " \
//	"CHHHL00GCHHHL00V";

// 4016 : Quad analog switches
const char name_4016[] PROGMEM = "4016";
const char tests_4016[] PROGMEM = \
	"0ea0oea0z1e1aG1e1az0f0bof0bz1eby1eb1V";

//	"0HH000G0HH000V " \
//	"1HH100G1HH100V " \
//	"0LL011G0LL011V " \
//	"1HH111G1HH111V";

// 40161 : 4-bit synchronous binary counter
const char name_40161[] PROGMEM = "40161";
const char tests_40161[] PROGMEM = \
	"0CdbrdssXz0Cdbrb/Lz1CdbraegLz1-cGbegLz1C-ybeHfz1C-yb*Hz1C-yb/Lz1C-ybfgLzb-ybfHfz1-cGbfHfz-ayb/Lz1C-ybssXV";

//	"0C10110G10XXXXXV " \
//	"0C10110G11LLLLLV " \
//	"1C10110G00HHLHLV " \
//	"1000001G11HHLHLV " \
//	"1C00001G11HHHLLV " \
//	"1C00001G11HHHHHV " \
//	"1C00001G11LLLLLV " \
//	"1C00001G11LLLHLV " \
//	"1100001G11LLHLLV " \
//	"1000001G11LLHLLV " \
//	"0000001G11LLLLLV " \
//	"1C00001G11XXXXXV";

// 40162 : 4-bit synchronous decade counter
const char name_40162[] PROGMEM = "40162";
const char tests_40162[] PROGMEM = \
	"0Cb1aGdssXz1Cb1aGaLehz1-cGbLehz1C-ybH/z1C-ybHfez1C-yb/Lz1C-ybfgLz1C-ybfHfzb-ybfeLzc-ybfeLz-aybfeLzc-yb/Lz1C-ybssXV";

//	"0C11100G10XXXXXV " \
//	"1C11100G00LHHHLV " \
//	"1000001G11LHHHLV " \
//	"1C00001G11HLLLLV " \
//	"1C00001G11HLLHHV " \
//	"1C00001G11LLLLLV " \
//	"1C00001G11LLLHLV " \
//	"1C00001G11LLHLLV " \
//	"1100001G11LLHHLV " \
//	"0100001G11LLHHLV " \
//	"0000001G11LLHHLV " \
//	"0100001G11LLLLLV " \
//	"1C00001G11XXXXXV";

// 4017 : 4-bit asynchronous decade counter
const char name_4017[] PROGMEM = "4017";
const char tests_4017[] PROGMEM = \
	"fH/Gfg0C1zg/LGfg0mzfgfLGfg0mz/ftfg0mz/fLGgg0mzH/fG/0mz/HfG/0mz/gLG/0mz/fLvfimz/fLGfh0mzfH/Gfg0mzfH/Gfg1mV";

//	"LLHLLLLGLLLH0C1V " \
//	"LHLLLLLGLLLH0C0V " \
//	"LLLHLLLGLLLH0C0V " \
//	"LLLLLLHGLLLH0C0V " \
//	"LLLLLLLGLHLH0C0V " \
//	"HLLLLLLGLLLL0C0V " \
//	"LLLLHLLGLLLL0C0V " \
//	"LLLLLHLGLLLL0C0V " \
//	"LLLLLLLGHLLL0C0V " \
//	"LLLLLLLGLLHL0C0V " \
//	"LLHLLLLGLLLH0C0V " \
//	"LLHLLLLGLLLH1C0V";

// 40174 : 6-bit D flip-flop with reset
const char name_40174[] PROGMEM = "40174";
const char tests_40174[] PROGMEM = \
	"ubltClHbHzqaiLwiLaLzpaiLwiLaLzpbjLwjLbLV";

//	"1H11H1HGCH1H11HV " \
//	"1L00L0LGCL0L00LV " \
//	"0L00L0LGCL0L00LV " \
//	"0L11L1LGCL1L11LV";

// 40175 : Quad D-type flip-flop
const char name_40175[] PROGMEM = "40175";
const char tests_40175[] PROGMEM = \
	"1hbgwhbgz1gahwgahz0gahwgahz0gbhwgbhV";

//	"1HL11LHGCHL11LHV " \
//	"1LH00HLGCLH00HLV " \
//	"0LH00HLGCLH00HLV " \
//	"0LH11HLGCLH11HLV";

// 4018 : 5-stage Johnson counter with preset inputs
const char name_4018[] PROGMEM = "4018";
const char tests_4018[] PROGMEM = \
	"1aekGdlHC1z1aHgrdlHmz1afkGdlHmz1afiGdlHmz1afiGdjHmza0fiGdjLmza0ekGbjLmza0ekGakLmz1aekGakHmz1aHgrakHmV";

//	"100HHH0G10H1HC1V " \
//	"100HLH0G10H1HC0V " \
//	"100LLH0G10H1HC0V " \
//	"100LLL0G10H1HC0V " \
//	"100LLL0G10L1HC0V " \
//	"000LLL0G10L1LC0V " \
//	"000HHH0G11L1LC0V " \
//	"000HHH0G00H0LC0V " \
//	"100HHH0G00H0HC0V " \
//	"100HLH0G00H0HC0V";

// 4019 : 8-to-4 line noninverting data selector/multiplexer with OR function
const char name_4019[] PROGMEM = "4019";
const char tests_4019[] PROGMEM = \
	"+by1*bz+b1o*bz+b1o/cz-ar1fgbz1cccG1ehaz1ccco*dV";

//	"1111111G1HHHH11V " \
//	"1111111G0HHHH11V " \
//	"1111111G0LLLL01V " \
//	"0000000G1LLLH11V " \
//	"1010101G1HHHL00V " \
//	"1010101G0HHHH10V";

// 40192 : 4-bit synchronous decade up/down counter
const char name_40192[] PROGMEM = "40192";
const char tests_40192[] PROGMEM = \
	"1sbsobebz1ebhGc0ecz0edhGa1eaz0fbgGa1eaz0fdgGa1eaz0gbgGa1eaz0gdgGa1gaz0fbfGa1eaz0fdfGa1eaz0gbfGa1eaz0gcfGa1eaz0fbfGa1eaz0fcfGa1haz0gbhGa1eaV";

//	"1XX11XXG011HH11V " \
//	"1HH11HLG010HH01V " \
//	"0HH10HLG001HH00V " \
//	"0LL11LHG001HH00V " \
//	"0LL10LHG001HH00V " \
//	"0LH11LHG001HH00V " \
//	"0LH10LHG001LH00V " \
//	"0LL11LLG001HH00V " \
//	"0LL10LLG001HH00V " \
//	"0LH11LLG001HH00V " \
//	"0LH01LLG001HH00V " \
//	"0LL11LLG001HH00V " \
//	"0LL01LLG001HL00V " \
//	"0LH11HLG001HH00V";

// 40193 : 4-bit synchronous binary up/down counter
const char name_40193[] PROGMEM = "40193";
const char tests_40193[] PROGMEM = \
	"0sbsGb1ebz0gbeGb0ecz0gdeGa1eaz0hbeGa1eaz0hdeGa1eaz0ebeGa1eaz0edeGa1gaz0fbfGa1eaz0fdfGa1eaz0gbfGa1eaz0gcfGa1eaz0fbfGa1eaz0fcfGa1haz0ebeGa1eaV";

//	"0XX11XXG111HH11V " \
//	"0LH11HHG110HH01V " \
//	"0LH10HHG001HH00V " \
//	"0HL11HHG001HH00V " \
//	"0HL10HHG001HH00V " \
//	"0HH11HHG001HH00V " \
//	"0HH10HHG001LH00V " \
//	"0LL11LLG001HH00V " \
//	"0LL10LLG001HH00V " \
//	"0LH11LLG001HH00V " \
//	"0LH01LLG001HH00V " \
//	"0LL11LLG001HH00V " \
//	"0LL01LLG001HL00V " \
//	"0HH11HHG001HH00V";

// 4020 : 14-bit asynchronous binary counter with reset
const char name_4020[] PROGMEM = "4020";
const char tests_4020[] PROGMEM = \
	"/fLxc/z/fLxa/z/fLvm/z/fLxm/z/fLvm/z/fLxm/z/fLvm/z/fLxm/z/fLvm/z/ftLm/z/ftHm/z/ftLm/z/ftHm/z/ftLm/z/ftHm/z/ftLm/z/ftHm/z/Hfxm/V";

//	"LLLLLLLGL01LLLLV " \
//	"LLLLLLLGL00LLLLV " \
//	"LLLLLLLGHC0LLLLV " \
//	"LLLLLLLGLC0LLLLV " \
//	"LLLLLLLGHC0LLLLV " \
//	"LLLLLLLGLC0LLLLV " \
//	"LLLLLLLGHC0LLLLV " \
//	"LLLLLLLGLC0LLLLV " \
//	"LLLLLLLGHC0LLLLV " \
//	"LLLLLLHGLC0LLLLV " \
//	"LLLLLLHGHC0LLLLV " \
//	"LLLLLLHGLC0LLLLV " \
//	"LLLLLLHGHC0LLLLV " \
//	"LLLLLLHGLC0LLLLV " \
//	"LLLLLLHGHC0LLLLV " \
//	"LLLLLLHGLC0LLLLV " \
//	"LLLLLLHGHC0LLLLV " \
//	"LLLLHLLGLC0LLLLV";

// 4022 : 3-bit asynchronous binary counter
const char name_4022[] PROGMEM = "4022";
const char tests_4022[] PROGMEM = \
	"gfLXLGXfkC1zH/XLGXfkmzfHfXLGXfkmz/LXtXfkmz/LXLGXgimzfgLXLGXfimz/HXLGXfimz/LXLGXHf0mzgfLXLGXfkmzgfLXLGXflmV";

//	"LHLLLXLGXLLH0C1V " \
//	"HLLLLXLGXLLH0C0V " \
//	"LLHLLXLGXLLH0C0V " \
//	"LLLLLXHGXLLH0C0V " \
//	"LLLLLXLGXLHL0C0V " \
//	"LLLHLXLGXLLL0C0V " \
//	"LLLLHXLGXLLL0C0V " \
//	"LLLLLXLGXHLL0C0V " \
//	"LHLLLXLGXLLH0C0V " \
//	"LHLLLXLGXLLH1C0V";

// 4023 : Triple 3-input NAND gates
const char name_4023[] PROGMEM = "4023";
const char tests_4023[] PROGMEM = \
	"-noea0za1at1e1az1adHoec0zdbnG1eb0zcauoea1z0bct1e1czb0bHoe0bz+qG1fb1V";

//	"00000HG0HH000V " \
//	"00100HG1HH100V " \
//	"10010HG0HH010V " \
//	"10110HG1HH110V " \
//	"01001HG0HH001V " \
//	"01101HG1HH101V " \
//	"11011HG0HH011V " \
//	"11111LG1LL111V";

// 4024 : 7-bit asynchronous binary counter with reset
const char name_4024[] PROGMEM = "4024";
const char tests_4024[] PROGMEM = \
	"C1ssGssszm/GXLXgXzm/GXLXhXzm/GXLXeXzm/GXHXfXzm/GXHXgXzm/GXHXhXzm/GXHXeXzmfgGXLXfXzmfgGXLXgXzmfgGXLXhXzmfgGXLXeXzmfgGXHXfXzC1/GXLXfXV";

//	"C1XXXXGXXXXXXV " \
//	"C0LLLLGXLXLHXV " \
//	"C0LLLLGXLXHLXV " \
//	"C0LLLLGXLXHHXV " \
//	"C0LLLLGXHXLLXV " \
//	"C0LLLLGXHXLHXV " \
//	"C0LLLLGXHXHLXV " \
//	"C0LLLLGXHXHHXV " \
//	"C0LLLHGXLXLLXV " \
//	"C0LLLHGXLXLHXV " \
//	"C0LLLHGXLXHLXV " \
//	"C0LLLHGXLXHHXV " \
//	"C0LLLHGXHXLLXV " \
//	"C1LLLLGXLXLLXV";

// 4025 : Triple 3-input NOR gates
const char name_4025[] PROGMEM = "4025";
const char tests_4025[] PROGMEM = \
	"-noea0za1aLG1f1az1adLofc0zdbpG1fb0zcaqofa1z0bcLG1f1czb0bLof0bz+qG1fb1V";

//	"00000HG0HH000V " \
//	"00100LG1LL100V " \
//	"10010LG0LL010V " \
//	"10110LG1LL110V " \
//	"01001LG0LL001V " \
//	"01101LG1LL101V " \
//	"11011LG0LL011V " \
//	"11111LG1LL111V";

// 4027 : Dual J-K flip-flops with set and reset
const char name_4027[] PROGMEM = "4027";
const char tests_4027[] PROGMEM = \
	"ha1cG1cagzgccrcc0hzhCadG-0hzgCcaG-0hzhmbr-0hzgmbr-0hzg-rcaCgzg-radChzg-0ob0Cgzg-0ob0ChV";

//	"HL00101G10100LHV " \
//	"LH01010G01010HLV " \
//	"HLC0010G00000HLV " \
//	"LHC0100G00000HLV " \
//	"HLC0110G00000HLV " \
//	"LHC0110G00000HLV " \
//	"LH00000G0100CLHV " \
//	"LH00000G0010CHLV " \
//	"LH00000G0110CLHV " \
//	"LH00000G0110CHLV";

// 4028 : 1-of-10 noninverting decoder/demultiplexer
const char name_4028[] PROGMEM = "4028";
const char tests_4028[] PROGMEM = \
	"fH/x-fz/fLGja0hzfH/x-fz/fLGja1gzH/fxadfz/gLGjc0fz/ftLabfzfgfLxdbfz/fLvcafz/HfxbafV";

//	"LLHLLLLGL0000LLV " \
//	"LLLLLLLGL1000HLV " \
//	"LLHLLLLGL0000LLV " \
//	"LLLLLLLGL1001LHV " \
//	"HLLLLLLGL0010LLV " \
//	"LLLLLHLGL1010LLV " \
//	"LLLLLLHGL0011LLV " \
//	"LLLHLLLGL1011LLV " \
//	"LLLLLLLGH0100LLV " \
//	"LLLLHLLGL1100LLV";

// 4029 : 4-bit synchronous binary/decade up/down counter with preset and ripple carry output
const char name_4029[] PROGMEM = "4029";
const char tests_4029[] PROGMEM = \
	"qa0gGcLaLCzpa0eGcLaLCzpa0gGcHaLCzpa0eGcHaLCzpa0gGcLaHCzpa0eGcLaHCzpa0gGcHaHCzpa0eGcHaHCzna0gGcLaLCzna0hGaLaLCzna0gGaLaLCzpa0eGaHaHCzpa0gGaHaHCzpa0eGaLaHCzpa0gGaLaHCzpa0eGaHaLCzpa0gGaHaLCzpa0eGaLaLCzpa1gGaLaLCzpa0fGaLaLCzna0eGaLaLCzCLa0gGcHbHCV";

//	"1L000LHG01L00LCV " \
//	"0L000HHG01L00LCV " \
//	"0L000LHG01H00LCV " \
//	"0L000HHG01H00LCV " \
//	"0L000LHG01L00HCV " \
//	"0L000HHG01L00HCV " \
//	"0L000LHG01H00HCV " \
//	"0L000HHG01H00HCV " \
//	"0H000LHG01L00LCV " \
//	"0H000HLG00L00LCV " \
//	"0H000LHG00L00LCV " \
//	"0L000HHG00H00HCV " \
//	"0L000LHG00H00HCV " \
//	"0L000HHG00L00HCV " \
//	"0L000LHG00L00HCV " \
//	"0L000HHG00H00LCV " \
//	"0L000LHG00H00LCV " \
//	"0L000HHG00L00LCV " \
//	"0L001LHG00L00LCV " \
//	"0L000LLG00L00LCV " \
//	"0H000HHG00L00LCV " \
//	"CL000LHG01H11HCV";

// 4030 : Quad 2-input XOR gate
const char name_4030[] PROGMEM = "4030";
const char tests_4030[] PROGMEM = \
	"dedGdedzcecGceczafaGafazbfbGbfbV";

//	"10HH10G10HH10V " \
//	"01HH01G01HH01V " \
//	"00LL00G00LL00V " \
//	"11LL11G11LL11V";

// 4031 : 64-bit serial-in serial-out shift register with multiplexed inputs
const char name_4031[] PROGMEM = "4031";
const char tests_4031[] PROGMEM = \
	"0CsXhGX0ss1z0CsXgGX0ss0z1CsXhGX1ss0z0CsXgGX1ss0V";

//	"0CXXXHLGX0XXXX1V " \
//	"0CXXXLHGX0XXXX0V " \
//	"1CXXXHLGX1XXXX0V " \
//	"0CXXXLHGX1XXXX0V";

// 4040 : 12-bit asynchronous binary counter with reset
const char name_4040[] PROGMEM = "4040";
const char tests_4040[] PROGMEM = \
	"sssXGXC1ssz/fLvm/z/ftLm/z/ftHm/z/gLxm/z/gLvm/z/Lexm/z/Levm/z/Hfxm/z/Hfvm/z/Hgxm/z/Hgvm/z/eLxm/z/eLvm/z/etLm/V";

//	"XXXXXXXGXC1XXXXV " \
//	"LLLLLLLGHC0LLLLV " \
//	"LLLLLLHGLC0LLLLV " \
//	"LLLLLLHGHC0LLLLV " \
//	"LLLLLHLGLC0LLLLV " \
//	"LLLLLHLGHC0LLLLV " \
//	"LLLLLHHGLC0LLLLV " \
//	"LLLLLHHGHC0LLLLV " \
//	"LLLLHLLGLC0LLLLV " \
//	"LLLLHLLGHC0LLLLV " \
//	"LLLLHLHGLC0LLLLV " \
//	"LLLLHLHGHC0LLLLV " \
//	"LLLLHHLGLC0LLLLV " \
//	"LLLLHHLGHC0LLLLV " \
//	"LLLLHHHGLC0LLLLV";

// 4041 : Quad buffers with complementary outputs
const char name_4041[] PROGMEM = "4041";
const char tests_4041[] PROGMEM = \
	"h1hyh1h1zg0grg0g0V";

//	"HL1HL1GHL1HL1V " \
//	"LH0LH0GLH0LH0V";

// 4042 : 4-bit transparent latch with selectable latch enable polarity and complementary outputs
const char name_4042[] PROGMEM = "4042";
const char tests_4042[] PROGMEM = \
	"eja1xeLbLzeLbcxeLbLzfkbrHfHaHV";

//	"HHL1001GLHHL11LV " \
//	"HHL1101GLHHL11LV " \
//	"LLH0110GHLLH00HV";

// 4043 : Quad 3-state S-R latches with overriding set
const char name_4043[] PROGMEM = "4043";
const char tests_4043[] PROGMEM = \
	"f1ccGf1acze0bdGecc0zea1aGe-0ze+ye+1V";

//	"LL10101GLL10001V " \
//	"HH01110GHH01010V " \
//	"HH00100GHH00000V " \
//	"HH11111GHH11111V";

// 4044 : Quad 3-state S-R latches with overriding reset
const char name_4044[] PROGMEM = "4044";
const char tests_4044[] PROGMEM = \
	"HX0bdGecHdzHX+yebHbzLX1ccGfdLcV";

//	"HX01110GHH01H10V " \
//	"HX11111GHH11H11V " \
//	"LX10101GLL10L01V";

// 4048 : 3-state 8-input multifunction gate.
const char name_4048[] PROGMEM = "4048";
const char tests_4048[] PROGMEM = \
	"l-r-a0zLbcaGa1cazHbcaG1ccazj-r1-aV";

//	"H100000G0000000V " \
//	"L110100G0010100V " \
//	"H110100G1010100V " \
//	"L100000G1000000V";

// 4049 : Hex inverters with high-to-low level shifter inputs
const char name_4049[] PROGMEM = "4049";
const char tests_4049[] PROGMEM = \
	"VjkjolLbj VkjkG1iHcj";

//	"VL1H0L1G0H1L11L1 " \
//	"VH0L1H0G1L0H01L1";

// 4051 : 8-channel analog multiplexer/demultiplexer
const char name_4051[] PROGMEM = "4051";
const char tests_4051[] PROGMEM = \
	"bLbaGac0bzbLbaGab1czbLbaGc0bdzbLbaob0b1zcLbaG1a+zbjard+1zdLbaGb0+zbLcaG+b1zaH-G-1azaH-Ga1adzaH-Gc-1zaH-o+azdH-G1-azaHcaG1c-zcH-Gb-0zalarb1-zbHbdGac0bV";

//	"11L1100G0001011V " \
//	"11L1100G0011101V " \
//	"11L1100G0101110V " \
//	"11L1100G0110111V " \
//	"01L1100G1001111V " \
//	"11L1000G1011111V " \
//	"10L1100G1101111V " \
//	"11L0100G1111111V " \
//	"00H0000G0000100V " \
//	"00H0000G0010010V " \
//	"00H0000G0100001V " \
//	"00H0000G0111100V " \
//	"10H0000G1000000V " \
//	"00H0100G1010000V " \
//	"01H0000G1100000V " \
//	"00H1000G1110000V " \
//	"11H1110G0001011V";

// 4053 : Triple 2-to-1 line analog multiplexer/demultiplexer
const char name_4053[] PROGMEM = "4053";
const char tests_4053[] PROGMEM = \
	"c0X1aGac0szc0laGac0ez0bHar1adez1alaGcc0ezc0laGa1ceV";

//	"010X100G00010XXV " \
//	"010H100G00010HHV " \
//	"011H000G10010HHV " \
//	"100H100G01010HHV " \
//	"010H100G00101HHV";

// 4066 : Quad analog switches
const char name_4066[] PROGMEM = "4066";
const char tests_4066[] PROGMEM = \
	"0ea0oea0z1e1aG1e1az0f0bof0bz1eby1eb1V";

//	"0HH000G0HH000V " \
//	"1HH100G1HH100V " \
//	"0LL011G0LL011V " \
//	"1HH111G1HH111V";

// 4068 : 8-input AND/NAND gate with complementary outputs
const char name_4068[] PROGMEM = "4068";
const char tests_4068[] PROGMEM = \
	"0+0o+LzccaGccnza1cra1cHza0bra0bHz0ba0obaHz-ao+Hz-aG-nz0+0obdHz0bc0o+HzabdGabuV";

//	"011110G01111LV " \
//	"010100G01010HV " \
//	"001010G00101HV " \
//	"000110G00011HV " \
//	"011000G01100HV " \
//	"000000G01111HV " \
//	"000000G00000HV " \
//	"011110G01110HV " \
//	"011010G01111HV " \
//	"001110G00111HV";

// 4069 : Hex inverters
const char name_4069[] PROGMEM = "4069";
const char tests_4069[] PROGMEM = \
	"0kktkkkz1jjLGjjjV";

//	"0H0H0HGH0H0H0V " \
//	"1L1L1LGL1L1L1V";

// 4070 : Quad 2-input XOR gates
const char name_4070[] PROGMEM = "4070";
const char tests_4070[] PROGMEM = \
	"afaGafazdedGdedzcecGceczbfbGbfbV";

//	"00LL00G00LL00V " \
//	"10HH10G10HH10V " \
//	"01HH01G01HH01V " \
//	"11LL11G11LL11V";

// 4071 : Quad 2-input OR gates
const char name_4071[] PROGMEM = "4071";
const char tests_4071[] PROGMEM = \
	"agbGbhazdedGdedzcecGceczbhaGagbV";

//	"00LH11G11HL00V " \
//	"10HH10G10HH10V " \
//	"01HH01G01HH01V " \
//	"11HL00G00LH11V";

// 4072 : Dual 4-input OR gates
const char name_4072[] PROGMEM = "4072";
const char tests_4072[] PROGMEM = \
	"L-r-pzl-GcanzHcara1aHzHba0obaHzHa1aGacnzlcaGccnzkbaGabnzHb1aobdHzHacr-uzladGcauzH+0o+HV";

//	"L00000G00000LV " \
//	"H10000G01000HV " \
//	"H01000G00100HV " \
//	"H11000G01100HV " \
//	"H00100G00010HV " \
//	"H10100G01010HV " \
//	"H01100G00110HV " \
//	"H11100G01110HV " \
//	"H00010G00001HV " \
//	"H10010G01001HV " \
//	"H11110G01111HV";

// 4073 : Triple 3-input AND gates
const char name_4073[] PROGMEM = "4073";
const char tests_4073[] PROGMEM = \
	"-pofa0za1aLG1f1az1adLofc0zdbpG1fb0zbaqofa1z0bcLG1f1czbaqof0bz+1t1eb1V";

//	"00000LG0LL000V " \
//	"00100LG1LL100V " \
//	"10010LG0LL010V " \
//	"10110LG1LL110V " \
//	"11001LG0LL001V " \
//	"01101LG1LL101V " \
//	"11001LG0LL011V " \
//	"11111HG1HH111V";

// 4075 : Triple 3-input OR gates
const char name_4075[] PROGMEM = "4075";
const char tests_4075[] PROGMEM = \
	"-pofa0zabnG1e1az1adHoec0zdbnG1eb0zbauoea1z0bct1e1czb0bHoe0bz+1t1e1aV";

//	"00000LG0LL000V " \
//	"00110HG1HH100V " \
//	"10010HG0HH010V " \
//	"10110HG1HH110V " \
//	"11001HG0HH001V " \
//	"01101HG1HH101V " \
//	"11011HG0HH011V " \
//	"11111HG1HH100V";

// 4076 : 4-bit 3-state D flip-flop with reset
const char name_4076[] PROGMEM = "4076";
const char tests_4076[] PROGMEM = \
	"a*CGa+0zaHgLCGacc0zaggCGa1caV";

//	"00HHHHCG0011110V " \
//	"00HLHLCG0001010V " \
//	"00LHLHCG0010100V";

// 4077 : Quad 2-input XNOR gates
const char name_4077[] PROGMEM = "4077";
const char tests_4077[] PROGMEM = \
	"aeaGaeazdfdGdfdzcfcGcfczbebGbebV";

//	"00HH00G00HH00V " \
//	"10LL10G10LL10V " \
//	"01LL01G01LL01V " \
//	"11HH11G11HH11V";

// 4078 : 8-input OR/NOR gate with complementary outputs
const char name_4078[] PROGMEM = "4078";
const char tests_4078[] PROGMEM = \
	"+do+LzccaGccpza1cra1cLza0bra0bLz0ba0obaLz-ao+Lz-aG-nz+dobdLz0bc0o+LzabdGabqV";

//	"111110G01111LV " \
//	"010100G01010LV " \
//	"001010G00101LV " \
//	"000110G00011LV " \
//	"011000G01100LV " \
//	"000000G01111LV " \
//	"000000G00000HV " \
//	"111110G01110LV " \
//	"011010G01111LV " \
//	"001110G00111LV";

// 4081 : Quad 2-input AND gates
const char name_4081[] PROGMEM = "4081";
const char tests_4081[] PROGMEM = \
	"agbGbhazdfdGdfdzcfcGcfczbhaGagbV";

//	"00LH11G11HL00V " \
//	"10LL10G10LL10V " \
//	"01LL01G01LL01V " \
//	"11HL00G00LH11V";

// 4082 : Dual 4-input AND gates
const char name_4082[] PROGMEM = "4082";
const char tests_4082[] PROGMEM = \
	"L-r-pzj-GcapzLcara1aLzLba0obaLzLa1aGacpzjcaGccpzibaGabpzLb1aobdLzLacrdbqzjadGcaqzH+0o+HV";

//	"L00000G00000LV " \
//	"L10000G01000LV " \
//	"L01000G00100LV " \
//	"L11000G01100LV " \
//	"L00100G00010LV " \
//	"L10100G01010LV " \
//	"L01100G00110LV " \
//	"L11100G01110LV " \
//	"L00010G10111LV " \
//	"L10010G01001LV " \
//	"H11110G01111HV";

// 4093 : Quad 2-input NAND gates with schmitt-trigger inputs
const char name_4093[] PROGMEM = "4093";
const char tests_4093[] PROGMEM = \
	"aeaGaeazdedGdedzcecGceczbfbGbfbV";

//	"00HH00G00HH00V " \
//	"10HH10G10HH10V " \
//	"01HH01G01HH01V " \
//	"11LL11G11LL11V";

// 4094 : 8-bit 3-state serial-in parallel-out shift register with output latches
const char name_4094[] PROGMEM = "4094";
const char tests_4094[] PROGMEM = \
	"1X0ssGsss1zbCHsXGsss1zdCgsGsss1zbCHgXGsss1zdCggGsss1zbCHgLGssXlzdCggGssh1zbCHgLGsXHg1zdCggGsHgjzbCHgLxXgg1zdCggvXHgjzcCggxXHgjzbngLxXgg1z1a*xX*0V";

//	"1X0XXXXGXXXXXX1V " \
//	"11CHXXXGXXXXXX1V " \
//	"10CLHXXGXXXXXX1V " \
//	"11CHLHXGXXXXXX1V " \
//	"10CLHLHGXXXXXX1V " \
//	"11CHLHLGXXXXXH1V " \
//	"10CLHLHGXXXXHL1V " \
//	"11CHLHLGXXXHLH1V " \
//	"10CLHLHGXXHLHL1V " \
//	"11CHLHLGLXLHLH1V " \
//	"10CLHLHGHXHLHL1V " \
//	"01CLHLHGLXHLHL1V " \
//	"110HLHLGLXLHLH1V " \
//	"100HHHHGLXHHHH0V";

// 4098 : Dual monostable multivibrator, retriggerable, resettable
const char name_4098[] PROGMEM = "4098";
const char tests_4098[] PROGMEM = \
	"ca0gGhac0z0bcgGhdb0z0+sGs+0z0+sGs+0z0+hGg+0zab1gGhb1az0bcgGhdb0z0+gGh+0z0bdhGg0bdzab0gGh0baz0+gGh+0V";

//	"01000LHGHL00010V " \
//	"01101LHGHL10110V " \
//	"01111XXGXX11110V " \
//	"01111XXGXX11110V " \
//	"01111HLGLH11110V " \
//	"00111LHGHL11100V " \
//	"01101LHGHL10110V " \
//	"01111LHGHL11110V " \
//	"01110HLGLH01110V " \
//	"00110LHGHL01100V " \
//	"01111LHGHL11110V";

// 4503 : 2/4-bit 3-state noninverting buffer/line driver
const char name_4503[] PROGMEM = "4503";
const char tests_4503[] PROGMEM = \
	"dlktliHdzbkltklLazajkLGllHczckjtikHbV";

//	"10H1H0HGH1L0H10V " \
//	"11H0H1HGH0H1L00V " \
//	"00L1H0LGH1H1H01V " \
//	"01H0L1HGL0H0H11V";

// 4510 : 4-bit synchronous decade up/down counter
const char name_4510[] PROGMEM = "4510";
const char tests_4510[] PROGMEM = \
	"qc0eGcLcHCzpa0gGcHaHCzpa0eGcHaHCzpa0gGaHaHCzpa0eGaLaHCV";

//	"1L010HHG01L01HCV " \
//	"0L000LHG01H00HCV " \
//	"0L000HHG01H00HCV " \
//	"0L000LHG00H00HCV " \
//	"0L000HHG00L00HCV";

// 4511 : BCD-7 Segment Latch Decoder Driver
const char name_4511[] PROGMEM = "4511";
const char tests_4511[] PROGMEM = \
	"acar*eHzabayfefLz0b1a1xeLeHzabar*Hgza1-G/fLV";

//	"0001000GHHHHHHHV " \
//	"0011001GLLHHLLLV " \
//	"0111001GLHHLHHHV " \
//	"0011000GHHHHHLHV " \
//	"0010000GLLLLLLLV";

// 4512 : 8-to-1 line 3-state data selector/multiplexer with AND inputs
const char name_4512[] PROGMEM = "4512";
const char tests_4512[] PROGMEM = \
	"0+bG1-iz1-aG-0kzd+y1caizc-ra1akzb0+G1adiza1-Gac0kzbdbydb0izacarab0kz+0bG1aciz-1aG-1kz+1cG1cciz-cra1alz+br1abiz-aya0bkz+byab1iz-ardb1kz-ar+1iz+byab1lV";

//	"0111111G10000L0V " \
//	"1000000G00000H0V " \
//	"1011111G10100L0V " \
//	"0100000G00100H0V " \
//	"1101111G10010L0V " \
//	"0010000G00010H0V " \
//	"1110111G10110L0V " \
//	"0001000G00110H0V " \
//	"1111011G10001L0V " \
//	"0000100G00001H0V " \
//	"1111101G10101L0V " \
//	"0000010G00100H1V " \
//	"1111110G10011L0V " \
//	"0000001G00011H0V " \
//	"1111111G00111L0V " \
//	"0000000G10111H0V " \
//	"0000000G11111L0V " \
//	"1111111G00111H1V";

// 4518 : Dual 4-bit asynchronous decade counters
const char name_4518[] PROGMEM = "4518";
const char tests_4518[] PROGMEM = \
	"C1ss1w1ss1zmssrmss0zC1/1w1/1zm/rm/0zCufiwufizmgfrmgf0zC1ssrC1ss0V";

//	"C1XXXX1GC1XXXX1V " \
//	"C0XXXX0GC0XXXX0V " \
//	"C1LLLL1GC1LLLL1V " \
//	"C0LLLL0GC0LLLL0V " \
//	"C1HLLL0GC1HLLL0V " \
//	"C0LHLL0GC0LHLL0V " \
//	"C1XXXX0GC1XXXX0V";

// 4519 : 4 - BIT AND/OR SELECTOR
const char name_4519[] PROGMEM = "4519";
const char tests_4519[] PROGMEM = \
	"0+bo/czabayngLbzc0baG1egdz1c0br1fgbz1a1ay1fhdzb1abG1ehdV";

//	"0111111G0LLLL01V " \
//	"0011001G0HLHL11V " \
//	"0101100G1HHLH10V " \
//	"1010110G1LLLH11V " \
//	"1001001G1LLHL10V " \
//	"1110011G1HHHL10V";

// 4520 : Dual binary counter
const char name_4520[] PROGMEM = "4520";
const char tests_4520[] PROGMEM = \
	"C1ss1w1ss1zCufiwufizC1gfrC1gf0zC1efrC1ef0zC1fhrC1fh0zCugiwugizCqeiwqeizC1ehrC1eh0zC1fgrC1fg0zCufkwufkzC1ggrC1gg0V";

//	"C1XXXX1GC1XXXX1V " \
//	"C1HLLL0GC1HLLL0V " \
//	"C1LHLL0GC1LHLL0V " \
//	"C1HHLL0GC1HHLL0V " \
//	"C1LLHL0GC1LLHL0V " \
//	"C1HLHL0GC1HLHL0V " \
//	"C1LHHL0GC1LHHL0V " \
//	"C1HHHL0GC1HHHL0V " \
//	"C1LLLH0GC1LLLH0V " \
//	"C1HLLH0GC1HLLH0V " \
//	"C1LHLH0GC1LHLH0V";

// 4529 : dual 4-channel or single 8-channel analog data selector
const char name_4529[] PROGMEM = "4529";
const char tests_4529[] PROGMEM = \
	"bcarec0bzbccrfc0bz1c0bye1caza1ccGf1ccV";

//	"1101000GHH01011V " \
//	"1101010GLL01011V " \
//	"1010111GHH10100V " \
//	"0010101GLL10101V";

// 4532 : 8-to-3 line noninverting priority encoder with cascade inputs
const char name_4532[] PROGMEM = "4532";
const char tests_4532[] PROGMEM = \
	"-0fx-fz-1fx-gza0bev-hza1cex-hzca1hv-hz1achx-hz-1gvachz-1gxadhz-1fvcahz-1fGja0hV";

//	"00000LLGL0000LLV " \
//	"00001LLGL0000LHV " \
//	"00011HHGH0000HLV " \
//	"00101HHGL0000HLV " \
//	"01001HLGH0000HLV " \
//	"10001HLGL0000HLV " \
//	"00001LHGH0001HLV " \
//	"00001LHGL0010HLV " \
//	"00001LLGH0100HLV " \
//	"00001LLGL1000HLV";

// 4543 : BCD to 7-segment decoder/LCD driver with input latch
const char name_4543[] PROGMEM = "4543";
const char tests_4543[] PROGMEM = \
	"1a1ar*eHz1acaxe/zb1-Gh*Hzdbar/fLV";

//	"1001000GHHHHHHHV " \
//	"1000100GLHHLLLLV " \
//	"1110000GHLHHHHHV " \
//	"1011000GLLLLLLLV";

// 4572 : CMOS Hex Inverter
const char name_4572[] PROGMEM = "4572";
const char tests_4572[] PROGMEM = \
	"kkHaGkkHazkkLdGkkHdzjjLcGjjHczjjLbGjjLbV";

//	"H0H0H00GH0H0H00V " \
//	"H0H0L10GH0H0H10V " \
//	"L1L1L01GL1L1H01V " \
//	"L1L1L11GL1L1L11V";

// 7400 : Quad 2-input NAND gates
const char name_7400[] PROGMEM = "7400";
const char tests_7400[] PROGMEM = \
	"aHatHaHazdHdtHdHdzcHctHcHczbLbLxbLbV";

//	"00H00HGH00H00V " \
//	"10H10HGH10H10V " \
//	"01H01HGH01H01V " \
//	"11L11LGL11L11V";

// 7401 : Quad 2-input open-collector NAND gates
const char name_7401[] PROGMEM = "7401";
const char tests_7401[] PROGMEM = \
	"HaHaGaHaHzHdHdGdHdHzHcHcGcHcHzLbLbGbLbLV";

//	"H00H00G00H00HV " \
//	"H10H10G10H10HV " \
//	"H01H01G01H01HV " \
//	"L11L11G11L11LV";

// 7402 : Quad 2-input NOR gates
const char name_7402[] PROGMEM = "7402";
const char tests_7402[] PROGMEM = \
	"HaHaGaHaHzLdLdGdLdLzLcLcGcLcLzLbLbGbLbLV";

//	"H00H00G00H00HV " \
//	"L10L10G10L10LV " \
//	"L01L01G01L01LV " \
//	"L11L11G11L11LV";

// 7403 : Quad 2-input open-collector NAND gates
const char name_7403[] PROGMEM = "7403";
const char tests_7403[] PROGMEM = \
	"aHatHaHazdHdtHdHdzcHctHcHczbLbLxbLbV";

//	"00H00HGH00H00V " \
//	"10H10HGH10H10V " \
//	"01H01HGH01H01V " \
//	"11L11LGL11L11V";

// 7404 : Hex inverters
const char name_7404[] PROGMEM = "7404";
const char tests_7404[] PROGMEM = \
	"0kktkkkz1jjLGjjjV";

//	"0H0H0HGH0H0H0V " \
//	"1L1L1LGL1L1L1V";

// 7405 : Hex open-collector inverters
const char name_7405[] PROGMEM = "7405";
const char tests_7405[] PROGMEM = \
	"0kktkkkz1jjLGjjjV";

//	"0H0H0HGH0H0H0V " \
//	"1L1L1LGL1L1L1V";

// 7406 : Hex open-collector high-voltage inverters
const char name_7406[] PROGMEM = "7406";
const char tests_7406[] PROGMEM = \
	"0kktkkkz1jjLGjjjV";

//	"0H0H0HGH0H0H0V " \
//	"1L1L1LGL1L1L1V";

// 7407 : Hex open-collector high-voltage buffers
const char name_7407[] PROGMEM = "7407";
const char tests_7407[] PROGMEM = \
	"1lltlllz0iiLGiiiV";

//	"1H1H1HGH1H1H1V " \
//	"0L0L0LGL0L0L0V";

// 7408 : Quad 2-input AND gates
const char name_7408[] PROGMEM = "7408";
const char tests_7408[] PROGMEM = \
	"aLaLxaLazcLcLxcLczdLdLxdLdzbHbtHbHbV";

//	"00L00LGL00L00V " \
//	"01L01LGL01L01V " \
//	"10L10LGL10L10V " \
//	"11H11HGH11H11V";

// 7409 : Quad 2-input open-collector AND gates
const char name_7409[] PROGMEM = "7409";
const char tests_7409[] PROGMEM = \
	"bHbtHbHbzdLdLxdLdzcLcLxcLczaLaLxaLaV";

//	"11H11HGH11H11V " \
//	"10L10LGL10L10V " \
//	"01L01LGL01L01V " \
//	"00L00LGL00L00V";

// 7410 : Triple 3-input NAND gates
const char name_7410[] PROGMEM = "7410";
const char tests_7410[] PROGMEM = \
	"-nva0kza1atlalz1adtHc0kzdbnvb0lzca1tHa1kz0bctlclzb0btkbkz+qxb1jV";

//	"00000HGH000H0V " \
//	"00100HGH100H1V " \
//	"10010HGH010H0V " \
//	"10110HGH110H1V " \
//	"01001HGH001H0V " \
//	"01101HGH101H1V " \
//	"11011HGH011H0V " \
//	"11111LGL111L1V";

// 74107 : Dual negative-edge-triggered J-K flip-flops with reset
const char name_74107[] PROGMEM = "74107";
const char tests_74107[] PROGMEM = \
	"0h0goCamz1h1gG1Ccmz0h0goCdC1z1g0hG1CdC1z0h1goCbC1z1g1hG1CbC1V";

//	"0HL0LHG0C00C0V " \
//	"1HL1LHG1C01C0V " \
//	"0HL0LHG0C10C1V " \
//	"1LH0HLG1C10C1V " \
//	"0HL1LHG0C11C1V " \
//	"1LH1HLG1C11C1V";

// 74109 : Dual J-/K flip-flops with set and reset
const char name_74109[] PROGMEM = "74109";
const char tests_74109[] PROGMEM = \
	"a0C1gGh1Ca0z0bC1gGh1Cb0z1amhGg0Ca1zb1mhGg1Cb1z1aC1gGh1Ca1zb0C1hGg1mbz1cC1hGg1C1czb1C1hGg1Cb1V";

//	"000C1LHGHL1C000V " \
//	"011C1LHGHL1C110V " \
//	"100C0HLGLH0C001V " \
//	"111C0HLGLH1C111V " \
//	"100C1LHGHL1C001V " \
//	"110C1HLGLH1C011V " \
//	"101C1HLGLH1C101V " \
//	"111C1HLGLH1C111V";

// 7411 : Triple 3-input AND gates
const char name_7411[] PROGMEM = "7411";
const char tests_7411[] PROGMEM = \
	"-pxa0iz-qxa1jzccpxc0iz1caLGjaiz+pxb0izc0bLGibjz1ccLGjcjz+1tHb1lV";

//	"00000LGL000L0V " \
//	"00001LGL001L1V " \
//	"01010LGL010L0V " \
//	"10100LGL100L0V " \
//	"11110LGL110L0V " \
//	"01011LGL011L1V " \
//	"10101LGL101L1V " \
//	"11111HGH111H1V";

// 74112 : Dual negative-edge-triggered J-K flip-flops with set and reset
const char name_74112[] PROGMEM = "74112";
const char tests_74112[] PROGMEM = \
	"Canfva0CbzCbnfGkbCbzCaqeGjaCazCbqeGjaCazCaqeGjaCbzmbHfvb0CbzC1cLeGjcCbzCbufvb1CbV";

//	"C000HLLGH000C11V " \
//	"C110HLLGH011C11V " \
//	"C001LHHGL100C00V " \
//	"C111LHHGL100C00V " \
//	"C001LHHGL100C11V " \
//	"C011HLLGH110C11V " \
//	"C101LHHGL101C11V " \
//	"C111HLLGH111C11V";

// 74113 : Dual negative-edge-triggered J-K flip-flop with set
const char name_74113[] PROGMEM = "74113";
const char tests_74113[] PROGMEM = \
	"Ca0hGga0CzCb0hGg0bCzCa1hGg1aCzmbhGga0CzC1cgGh1cCzCb1hGgb1CV";

//	"C000HLGLH000CV " \
//	"C110HLGLH011CV " \
//	"C001HLGLH100CV " \
//	"C011HLGLH000CV " \
//	"C101LHGHL101CV " \
//	"C111HLGLH111CV";

// 7412 : Triple 3-input open-collector NAND gates
const char name_7412[] PROGMEM = "7412";
const char tests_7412[] PROGMEM = \
	"-nva0kza1atlalz1adtHc0kzdbnvb0lzca1tHa1kz0bctlclzb0btkbkz+qxb1jV";

//	"00000HGH000H0V " \
//	"00100HGH100H1V " \
//	"10010HGH010H0V " \
//	"10110HGH110H1V " \
//	"01001HGH001H0V " \
//	"01101HGH101H1V " \
//	"11011HGH011H0V " \
//	"11111LGL111L1V";

// 74123 : Dual retriggerable monostable multivibrators with overriding reset
const char name_74123[] PROGMEM = "74123";
const char tests_74123[] PROGMEM = \
	"anftanfHzbnftbnfHzcnftcnfHzbuftbufHzanftanfHz1cHft1cHfHV";

//	"000HLLHG000HLLHV " \
//	"110HLLHG110HLLHV " \
//	"010HLLHG010HLLHV " \
//	"111HLLHG111HLLHV " \
//	"000HLLHG000HLLHV " \
//	"101HLLHG101HLLHV";

// 74125 : Quad 3-state noninverting buffer with active low enables
const char name_74125[] PROGMEM = "74125";
const char tests_74125[] PROGMEM = \
	"cHctHdHdzaLaLxaLazdHdtHcHczbHbtHbHbzdHbtHcHbzbHdtHbHczbHdtHcHbzdHbtHbHcV";

//	"01H01HGH10H10V " \
//	"00L00LGL00L00V " \
//	"10H10HGH01H01V " \
//	"11H11HGH11H11V " \
//	"10H11HGH01H11V " \
//	"11H10HGH11H01V " \
//	"11H10HGH01H11V " \
//	"10H11HGH11H01V";

// 74126 : Quad 3-state noninverting buffer with active high enables
const char name_74126[] PROGMEM = "74126";
const char tests_74126[] PROGMEM = \
	"bHbtHbHbzdLdLxcLczaHatHaHazcHctHdHdV";

//	"11H11HGH11H11V " \
//	"10L10LGL01L01V " \
//	"00H00HGH00H00V " \
//	"01H01HGH10H10V";

// 7413 : Dual 4-input NAND gates with schmitt-trigger inputs
const char name_7413[] PROGMEM = "7413";
const char tests_7413[] PROGMEM = \
	"-nv-0z1-tl-zcanvca0zbanvba0zacnvac0z1adtladzccnvcc0zbcnvbc0z+qx+1V";

//	"00000HGH00000V " \
//	"10000HGH10000V " \
//	"01000HGH01000V " \
//	"11000HGH11000V " \
//	"00010HGH00010V " \
//	"10010HGH10010V " \
//	"01010HGH01010V " \
//	"11010HGH11010V " \
//	"11111LGL11111V";

// 74132 : Quad 2-input NAND gates with schmitt-trigger inputs
const char name_74132[] PROGMEM = "74132";
const char tests_74132[] PROGMEM = \
	"aHatHaHazdHdtHdHdzcHctHcHczbLbLxbLbV";

//	"00H00HGH00H00V " \
//	"10H10HGH10H10V " \
//	"01H01HGH01H01V " \
//	"11L11LGL11L11V";

// 74133 : 13-input NAND gate
const char name_74133[] PROGMEM = "74133";
const char tests_74133[] PROGMEM = \
	"-arH-az1-av-azb-rH-az-arHb1a0z+arH-az+1av-az-arH+bz+b1v-az+byl-0z+b1vb-z+b1vb1a0z+b1v+az+b1v+dz+b1x+bV";

//	"0000000GH000000V " \
//	"1000000GH000000V " \
//	"1100000GH000000V " \
//	"0000000GH111000V " \
//	"1111000GH000000V " \
//	"1111100GH000000V " \
//	"0000000GH111111V " \
//	"1111111GH000000V " \
//	"1111111GH100000V " \
//	"1111111GH110000V " \
//	"1111111GH111000V " \
//	"1111111GH111100V " \
//	"1111111GH111110V " \
//	"1111111GL111111V";

// 74136 : Quad 2-input open-collector XOR gates
const char name_74136[] PROGMEM = "74136";
const char tests_74136[] PROGMEM = \
	"aLaLxaLazdHdtHdHdzcHctHcHczbLbLxbLbV";

//	"00L00LGL00L00V " \
//	"10H10HGH10H10V " \
//	"01H01HGH01H01V " \
//	"11L11LGL11L11V";

// 74137 : 1-of-8 inverting decoder/demultiplexer with address latches
const char name_74137[] PROGMEM = "74137";
const char tests_74137[] PROGMEM = \
	"+bt*eHz-dt*eHz+dt*eHz-at*eHz-ct*eLz1-1t*Hgzcact*LezbacteheHza1a1teL*z1ca1th*Hz0ba1tL*ezb1aqG*eHV";

//	"111111HGHHHHHHHV " \
//	"000010HGHHHHHHHV " \
//	"111110HGHHHHHHHV " \
//	"000000HGHHHHHHHV " \
//	"000001HGHHHHHHLV " \
//	"100001HGHHHHHLHV " \
//	"010001HGHHHHLHHV " \
//	"110001HGHHHLHHHV " \
//	"001001HGHHLHHHHV " \
//	"101001HGHLHHHHHV " \
//	"011001HGLHHHHHHV " \
//	"111001LGHHHHHHHV";

// 74138 : 1-of-8 inverting decoder/demultiplexer
const char name_74138[] PROGMEM = "74138";
const char tests_74138[] PROGMEM = \
	"+bt*eHza0bnG*eHz+dt*eHz-at*eHz-ct*eLz1-1t*Hgzcact*LezbacteheHza1a1teL*z1ca1th*Hz0ba1tL*ezb1aqG*eHV";

//	"111111HGHHHHHHHV " \
//	"000110HGHHHHHHHV " \
//	"111110HGHHHHHHHV " \
//	"000000HGHHHHHHHV " \
//	"000001HGHHHHHHLV " \
//	"100001HGHHHHHLHV " \
//	"010001HGHHHHLHHV " \
//	"110001HGHHHLHHHV " \
//	"001001HGHHLHHHHV " \
//	"101001HGHLHHHHHV " \
//	"011001HGLHHHHHHV " \
//	"111001LGHHHHHHHV";

// 74139 : Dual 1-of-4 inverting decoder/demultiplexer
const char name_74139[] PROGMEM = "74139";
const char tests_74139[] PROGMEM = \
	"1c*G*0bzb0*G*1czapeteha0zc0heGegc0za1egGhe1az0behxeHb0V";

//	"101HHHHGHHHH011V " \
//	"110HHHHGHHHH101V " \
//	"000LHHHGHHHL000V " \
//	"010HLHHGHHLH010V " \
//	"001HHLHGHLHH100V " \
//	"011HHHLGLHHH110V";

// 7414 : Hex inverters with schmitt-trigger inputs
const char name_7414[] PROGMEM = "7414";
const char tests_7414[] PROGMEM = \
	"0kktkkkz1jjLGjjjV";

//	"0H0H0HGH0H0H0V " \
//	"1L1L1LGL1L1L1V";

// 74140 : Dual 4-input NAND gates/50R line drivers
const char name_74140[] PROGMEM = "74140";
const char tests_74140[] PROGMEM = \
	"-nv-0z1-tl-zcanvca0zbanvba0zacnvac0z1adtladzccnvcc0zbcnvbc0z+qx+1V";

//	"00000HGH00000V " \
//	"10000HGH10000V " \
//	"01000HGH01000V " \
//	"11000HGH11000V " \
//	"00010HGH00010V " \
//	"10010HGH10010V " \
//	"01010HGH01010V " \
//	"11010HGH11010V " \
//	"11111LGL11111V";

// 74145 : 1-of-10 decoder/driver open-collector
const char name_74145[] PROGMEM = "74145";
const char tests_74145[] PROGMEM = \
	"L*eGeH-zh*teHaczeL*GeHadzeheteHabz*LeGeHcaz*HgGeHccz*eLGekb0z*etLe0b1z*etHg1a0z*eteja1z*etelc0z*eteHdbz*eteHbaz*eteHbcz*eteHbdz*eteH+V";

//	"LHHHHHHGHHH0000V " \
//	"HLHHHHHGHHH0001V " \
//	"HHLHHHHGHHH0010V " \
//	"HHHLHHHGHHH0011V " \
//	"HHHHLHHGHHH0100V " \
//	"HHHHHLHGHHH0101V " \
//	"HHHHHHLGHHH0110V " \
//	"HHHHHHHGLHH0111V " \
//	"HHHHHHHGHLH1000V " \
//	"HHHHHHHGHHL1001V " \
//	"HHHHHHHGHHH1010V " \
//	"HHHHHHHGHHH1011V " \
//	"HHHHHHHGHHH1100V " \
//	"HHHHHHHGHHH1101V " \
//	"HHHHHHHGHHH1110V " \
//	"HHHHHHHGHHH1111V";

// 74147 : 10-to-4 line inverting priority encoder
const char name_74147[] PROGMEM = "74147";
const char tests_74147[] PROGMEM = \
	"+1ev+kz+1eGib1iz+0ev+izb1cfx+kzb0bfv+kzdb1gx+kz0+gv+kz+1hxbdkz+1hvbckz+1exdbkV";

//	"11111HHGH1111H0V " \
//	"11111HHGL0111L0V " \
//	"11110HHGH1111L0V " \
//	"11101LLGL1111H0V " \
//	"11011LLGH1111H0V " \
//	"10111LHGL1111H0V " \
//	"01111LHGH1111H0V " \
//	"11111HLGL1110H0V " \
//	"11111HLGH1101H0V " \
//	"11111HHGL1011H0V";

// 74148 : 10-to-4 line inverting priority encoder
const char name_74148[] PROGMEM = "74148";
const char tests_74148[] PROGMEM = \
	"c0bevccez+0ev+hz1cafxccgzcc0fGlc0gzdb0gxccgz0bdgGlc0gz+0hGjc0gz+0hvccgz+0exdbgz+0eGkb1gV";

//	"01011HHGH0101HHV " \
//	"11110HHGH1111HLV " \
//	"10100LLGL0101LHV " \
//	"01010LLGH1010LHV " \
//	"10110LHGL0101LHV " \
//	"01110LHGH1010LHV " \
//	"11110HLGL1010LHV " \
//	"11110HLGH0101LHV " \
//	"11110HHGL1011LHV " \
//	"11110HHGH0111LHV";

// 7415 : Triple 3-input open-collector AND gates
const char name_7415[] PROGMEM = "7415";
const char tests_7415[] PROGMEM = \
	"-pxa0iza1aLGjajz1adLxc0izdbpxb0jzcaqxa1iz0bcLGjcjzb0bLGibiz+1tHb1lV";

//	"00000LGL000L0V " \
//	"00100LGL100L1V " \
//	"10010LGL010L0V " \
//	"10110LGL110L1V " \
//	"01001LGL001L0V " \
//	"01101LGL101L1V " \
//	"11011LGL011L0V " \
//	"11111HGH111H1V";

// 74151 : 8-to-1 line data selector/multiplexer with complementary outputs
const char name_74151[] PROGMEM = "74151";
const char tests_74151[] PROGMEM = \
	"ccgy1cccz1c0gyccc0zbdgra0+zachr-a0zbcgra+1zadhra1-zdbgrc0+zcahrc-0z0b1g0o+bz1a0h0ob-z+gr1abdz-hr1-cz+grdb1cz-hr1cadz+grbc0bz-hrba1az+grbdb1z-hr+a0V";

//	"0101LH1G1010101V " \
//	"1010LH1G0101010V " \
//	"1110LH0G0001111V " \
//	"0001HL0G0000000V " \
//	"1101LH0G0011111V " \
//	"0010HL0G0010000V " \
//	"1011LH0G0101111V " \
//	"0100HL0G0100000V " \
//	"0111LH0G0111111V " \
//	"1000HL0G0110000V " \
//	"1111LH0G1001110V " \
//	"0000HL0G1000001V " \
//	"1111LH0G1011101V " \
//	"0000HL0G1010010V " \
//	"1111LH0G1101011V " \
//	"0000HL0G1100100V " \
//	"1111LH0G1110111V " \
//	"0000HL0G1111000V";

// 74153 : 8-to-2 line noninverting data selector/multiplexer with separate enables
const char name_74153[] PROGMEM = "74153";
const char tests_74153[] PROGMEM = \
	"1a1cLGjc0bzb1cpxcccza1cpGjca1zacctLccczaccLGjc0bz0bcnxc0b1z0bcpGjca1zccctLccczcccLGjc0bz0bcnxc0b1z1a1cLxccaz1ccpGlca0z1a1cLGjcc0z1ccpvc0b0zbccLGja1azb1cpGkba0zbccLGjcc0zb1cpvc0b0V";

//	"100101LGL101011V " \
//	"111010LGL010101V " \
//	"001010LGL101001V " \
//	"000101HGL010101V " \
//	"000101LGL101011V " \
//	"011010HGL010111V " \
//	"011010LGL101001V " \
//	"010101HGL010101V " \
//	"010101LGL101011V " \
//	"011010HGL010111V " \
//	"100101LGL010100V " \
//	"101010LGH101000V " \
//	"100101LGL101010V " \
//	"101010LGH010110V " \
//	"110101LGL100100V " \
//	"111010LGH011000V " \
//	"110101LGL101010V " \
//	"111010LGH010110V";

// 74157 : 8-to-4 line noninverting data selector/multiplexer
const char name_74157[] PROGMEM = "74157";
const char tests_74157[] PROGMEM = \
	"bubtHbHb0z1cLcLxdjczapaLxaLa0zaqcLxdjazcndtHcHc0z0bHbtHbHb0z1aLaLxaLa0zbpdLxcLc0z1cHctHdlazcpdLxcibV";

//	"111H11HGH11H110V " \
//	"101L01LGL10L101V " \
//	"000L00LGL00L000V " \
//	"001L01LGL10L100V " \
//	"010H10HGH01H010V " \
//	"011H11HGH11H110V " \
//	"100L00LGL00L000V " \
//	"110L10LGL01L010V " \
//	"101H01HGH10H100V " \
//	"010L10LGL01L011V";

// 74158 : 4-of-8 inverting decoder/demultiplexer
const char name_74158[] PROGMEM = "74158";
const char tests_74158[] PROGMEM = \
	"cndtHdlcz1cHctHckbzanatHaHa0zauctHdlazcpdLxcLc0z0bLbLxbLb0z1aHatHaHa0zbndtHcHc0z1cLcLxdjazbqbLxbLb0V";

//	"010H10HGH10H101V " \
//	"101H01HGH01H011V " \
//	"000H00HGH00H000V " \
//	"001H01HGH10H100V " \
//	"010L10LGL01L010V " \
//	"011L11LGL11L110V " \
//	"100H00HGH00H000V " \
//	"110H10HGH01H010V " \
//	"101L01LGL10L100V " \
//	"111L11LGL11L110V";

// 7416 : Hex open-collector high-voltage inverters
const char name_7416[] PROGMEM = "7416";
const char tests_7416[] PROGMEM = \
	"0kktkkkz1jjLGjjjV";

//	"0H0H0HGH0H0H0V " \
//	"1L1L1LGL1L1L1V";

// 74160 : 4-bit synchronous decade counter
const char name_74160[] PROGMEM = "74160";
const char tests_74160[] PROGMEM = \
	"0C-ra/Lz0C-yb/Lz1Cb1cGcLehz1C-ybH/z1Cb1cGbHfez1C-yb/Lz1C-ybfgLz1C-ybfHfz1C-ybfeLz1C-ybgfLz1C-ybggLzb-ybLefz1-cGbLefz-ayb/LV";

//	"0C00000G00LLLLLV " \
//	"0C00001G11LLLLLV " \
//	"1C11101G01LHHHLV " \
//	"1C00001G11HLLLLV " \
//	"1C11101G11HLLHHV " \
//	"1C00001G11LLLLLV " \
//	"1C00001G11LLLHLV " \
//	"1C00001G11LLHLLV " \
//	"1C00001G11LLHHLV " \
//	"1C00001G11LHLLLV " \
//	"1C00001G11LHLHLV " \
//	"1100001G11LHHLLV " \
//	"1000001G11LHHLLV " \
//	"0000001G11LLLLLV";

// 74161 : 4-bit synchronous binary counter
const char name_74161[] PROGMEM = "74161";
const char tests_74161[] PROGMEM = \
	"c-ra/Lzc-yb/Lz1C-yd/Lz1C-rb/Lz1C-rd/Lz1C-ra/Lz1CabycefLz1C-ybegLz1C-ybeHfz1C-yb*Hz1C-yb/Lz1C-ybfgLzb-ybfHfz1-cGbfHfz-ayb/Lz1C-ybssXV";

//	"0100000G00LLLLLV " \
//	"0100001G11LLLLLV " \
//	"1C00001G10LLLLLV " \
//	"1C00000G11LLLLLV " \
//	"1C00000G10LLLLLV " \
//	"1C00000G00LLLLLV " \
//	"1C00111G01HHLLLV " \
//	"1C00001G11HHLHLV " \
//	"1C00001G11HHHLLV " \
//	"1C00001G11HHHHHV " \
//	"1C00001G11LLLLLV " \
//	"1C00001G11LLLHLV " \
//	"1100001G11LLHLLV " \
//	"1000001G11LLHLLV " \
//	"0000001G11LLLLLV " \
//	"1C00001G11XXXXXV";

// 74162 : 4-bit synchronous decade counter
const char name_74162[] PROGMEM = "74162";
const char tests_74162[] PROGMEM = \
	"c-rassXz0C-ra/Lz0C-ra/Lz0C1-Gb/Lz1C-yd/Lz1C-rb/Lz0C-rb/Lz1Cb1aGaLehz1CabybH/z1C-ybHfez1C-yb/Lz1C-ybfgLz1C-ybfHfzb-ybfeLzc-ybfeLz-aybfeLzc-yb/Lz1C-ybssXV";

//	"0100000G00XXXXXV " \
//	"0C00000G00LLLLLV " \
//	"0C00000G00LLLLLV " \
//	"0C10000G11LLLLLV " \
//	"1C00001G10LLLLLV " \
//	"1C00000G11LLLLLV " \
//	"0C00000G11LLLLLV " \
//	"1C11100G00LHHHLV " \
//	"1C00111G11HLLLLV " \
//	"1C00001G11HLLHHV " \
//	"1C00001G11LLLLLV " \
//	"1C00001G11LLLHLV " \
//	"1C00001G11LLHLLV " \
//	"1100001G11LLHHLV " \
//	"0100001G11LLHHLV " \
//	"0000001G11LLHHLV " \
//	"0100001G11LLLLLV " \
//	"1C00001G11XXXXXV";

// 74163 : 4-bit synchronous binary counter
const char name_74163[] PROGMEM = "74163";
const char tests_74163[] PROGMEM = \
	"c-rassXz1-aGassXz0C-ra/Lz0C1-Gb/Lz1CabycefLz1C-ybegLz1C-ybeHfz1C-yb*Hz1C-yb/Lz1C-ybfgLz1C-ybfHfz1C-ybfeLz1C-ybgfLzb-ybggLzc-ybggLz-aybggLzc-yb/LV";

//	"0100000G00XXXXXV " \
//	"1000000G00XXXXXV " \
//	"0C00000G00LLLLLV " \
//	"0C10000G11LLLLLV " \
//	"1C00111G01HHLLLV " \
//	"1C00001G11HHLHLV " \
//	"1C00001G11HHHLLV " \
//	"1C00001G11HHHHHV " \
//	"1C00001G11LLLLLV " \
//	"1C00001G11LLLHLV " \
//	"1C00001G11LLHLLV " \
//	"1C00001G11LLHHLV " \
//	"1C00001G11LHLLLV " \
//	"1100001G11LHLHLV " \
//	"0100001G11LHLHLV " \
//	"0000001G11LHLHLV " \
//	"0100001G11LLLLLV";

// 74164 : 8-bit serial-in parallel-out shift register
const char name_74164[] PROGMEM = "74164";
const char tests_74164[] PROGMEM = \
	"a/Gm/zb/Gm/za/w1/zbHfLw1/zbefw1/zaLeLw1/zcfew1/zdfgwufLV";

//	"00LLLLGC0LLLLV " \
//	"11LLLLGC0LLLLV " \
//	"00LLLLGC1LLLLV " \
//	"11HLLLGC1LLLLV " \
//	"11HHLLGC1LLLLV " \
//	"00LHHLGC1LLLLV " \
//	"01LLHHGC1LLLLV " \
//	"10LLLHGC1HLLLV";

// 74165 : 8-bit parallel-in serial-out shift register
const char name_74165[] PROGMEM = "74165";
const char tests_74165[] PROGMEM = \
	"0C-tL-az0CcatL-az1CcatL-az1Cadtj-0z1CacLGl-0z1C-tj-0V";

//	"0C0000HGL000000V " \
//	"0C0100HGL000000V " \
//	"1C0100HGL000000V " \
//	"1C0010HGL100000V " \
//	"1C0001LGH100000V " \
//	"1C0000HGL100000V";

// 74166 : 8-bit parallel-in serial-out shift register
const char name_74166[] PROGMEM = "74166";
const char tests_74166[] PROGMEM = \
	"-aCG-Laz+dCobqbz-aCG1apaz+dCG+Lbz-aCG1apaz+dCG+Hdz1-0CG1ancz+dCG+Hbz-aCG1ancz0+0CG+Hbz1-1CG1ancz0+1CG+HdV";

//	"000000CG0000L00V " \
//	"111110CG0111L11V " \
//	"000000CG1000L00V " \
//	"111110CG1111L11V " \
//	"000000CG1000L00V " \
//	"111110CG1111H10V " \
//	"100000CG1000H01V " \
//	"111110CG1111H11V " \
//	"000000CG1000H01V " \
//	"011110CG1111H11V " \
//	"100001CG1000H01V " \
//	"011111CG1111H10V";

// 7417 : Hex open-collector high-voltage buffers
const char name_7417[] PROGMEM = "7417";
const char tests_7417[] PROGMEM = \
	"1lltlllz0iiLGiiiV";

//	"1H1H1HGH1H1H1V " \
//	"0L0L0LGL0L0L0V";

// 74173 : 4-bit 3-state D flip-flop with reset, dual clock enables and dual output enables
const char name_74173[] PROGMEM = "74173";
const char tests_74173[] PROGMEM = \
	"a/CG-a1za/CG+b1zaggCGa1cazaggCG1a1c0zaggCGccc0zaggCGbcc0zaHgLCGacc0zaHgLCG1ccazaHgLCobcazaHgLCGb1cazaggCGa1cazafeCGaba0za/CG+b1zaefCG-b0za/CG+b1V";

//	"00LLLLCG0000001V " \
//	"00LLLLCG1111111V " \
//	"00LHLHCG0010100V " \
//	"00LHLHCG1001010V " \
//	"00LHLHCG0101010V " \
//	"00LHLHCG1101010V " \
//	"00HLHLCG0001010V " \
//	"00HLHLCG1010100V " \
//	"00HLHLCG0110100V " \
//	"00HLHLCG1110100V " \
//	"00LHLHCG0010100V " \
//	"00LLHHCG0011000V " \
//	"00LLLLCG1111111V " \
//	"00HHLLCG0000110V " \
//	"00LLLLCG1111111V";

// 74174 : 6-bit D flip-flop with reset
const char name_74174[] PROGMEM = "74174";
const char tests_74174[] PROGMEM = \
	"paiLwiLaLzpbjLwjLbLzudjtCiHdLzqckLwlLcHzubltClHbHzpbjLwjLbLV";

//	"0L00L0LGCL0L00LV " \
//	"0L11L1LGCL1L11LV " \
//	"1H10L1HGCL0H10LV " \
//	"1L01H0LGCH1L01HV " \
//	"1H11H1HGCH1H11HV " \
//	"0L11L1LGCL1L11LV";

// 74175 : 4-bit D flip-flop with complementary outputs and reset
const char name_74175[] PROGMEM = "74175";
const char tests_74175[] PROGMEM = \
	"0gahwgahz0gbhwgbhz1hbgwhbgz1gahwgahV";

//	"0LH00HLGCLH00HLV " \
//	"0LH11HLGCLH11HLV " \
//	"1HL11LHGCHL11LHV " \
//	"1LH00HLGCLH00HLV";

// 7418 : Dual 4-input NAND gates with schmitt-trigger inputs
const char name_7418[] PROGMEM = "7418";
const char tests_7418[] PROGMEM = \
	"-nv-0z1-tl-zcanvca0zbanvba0zacnvac0z1adtladzccnvcc0zbcnvbc0z+qx+1V";

//	"00000HGH00000V " \
//	"10000HGH10000V " \
//	"01000HGH01000V " \
//	"11000HGH11000V " \
//	"00010HGH00010V " \
//	"10010HGH10010V " \
//	"01010HGH01010V " \
//	"11010HGH11010V " \
//	"11111LGL11111V";

// 74182 : Look-ahead carry generator
const char name_74182[] PROGMEM = "74182";
const char tests_74182[] PROGMEM = \
	"babteg1az1ccpGgfc0V";

//	"110011HGHHLH100V " \
//	"101010LGLHLL010V";

// 74190 : 4-bit synchronous decade up/down counter
const char name_74190[] PROGMEM = "74190";
const char tests_74190[] PROGMEM = \
	"0fafGa0gmz0fdfGa1gmz0gafGa1gmz0hafGa1gmz0eafGa1gmz0fahGa1gmz0ecfGa1gmz0hcfGa1gmz0gcfGa1gmV";

//	"0LL00LLG000LHC0V " \
//	"0LL10LLG001LHC0V " \
//	"0LH00LLG001LHC0V " \
//	"0HL00LLG001LHC0V " \
//	"0HH00LLG001LHC0V " \
//	"0LL00HLG001LHC0V " \
//	"0HH01LLG001LHC0V " \
//	"0HL01LLG001LHC0V " \
//	"0LH01LLG001LHC0V";

// 74191 : 4-bit synchronous binary up/down counter
const char name_74191[] PROGMEM = "74191";
const char tests_74191[] PROGMEM = \
	"0fafGa0gmz0fdfGa1gmz0gafGa1gmz0hafGa1gmz0eafGa1gmz0fahGa1gmz0ecfGa1gmz0hcfGa1gmz0gcfGa1gmV";

//	"0LL00LLG000LHC0V " \
//	"0LL10LLG001LHC0V " \
//	"0LH00LLG001LHC0V " \
//	"0HL00LLG001LHC0V " \
//	"0HH00LLG001LHC0V " \
//	"0LL00HLG001LHC0V " \
//	"0HH01LLG001LHC0V " \
//	"0HL01LLG001LHC0V " \
//	"0LH01LLG001LHC0V";

// 74192 : 4-bit synchronous decade up/down counter
const char name_74192[] PROGMEM = "74192";
const char tests_74192[] PROGMEM = \
	"0fbfGd+0z0fbfGdb1az0fbgG1abaz0fbgGdb1az0fdgGdb1az0gbgGdb1az0gdgG1ccaV";

//	"0LL11LLG1011110V " \
//	"0LL11LLG1011100V " \
//	"0LL11LHG1001100V " \
//	"0LL11LHG1011100V " \
//	"0LL10LHG1011100V " \
//	"0LH11LHG1011100V " \
//	"0LH10LHG1010100V";

// 74193 : 4-bit synchronous binary up/down counter
const char name_74193[] PROGMEM = "74193";
const char tests_74193[] PROGMEM = \
	"1hbgG1aeaz0gbhGc0ecz1ebeGb0ecz1hC1eGb1ecz1gC1eGb1ecz1fC1eGb1ecz1eC1gGb1ecz1hC1gGb1ecz1gC1gGb1ecz1fC1gGb1ecz1eC1hGb1ecz1hC1hGb1ecz1gC1hGb1ecz1fC1hGb1ecz1eC1fGb1ecz1hC1fGb1ecz1gC1fGb1ecz1fbfGb1ecz1fcfGb1hcz1ebeGb1ecz1edeGb1gcz1fbfGb1ecz1g1CfGb1ecz1h1CfGb1ecz1e1CfGb1ecz1f1ChGb1ecz1g1ChGb1ecz1h1ChGb1ecz1e1ChGb1ecz1f1CgGb1ecz1fbfGb1eC1V";

//	"1HL11LHG100HH00V " \
//	"0LH11HLG010HH01V " \
//	"1HH11HHG110HH01V " \
//	"1HLC1HHG111HH01V " \
//	"1LHC1HHG111HH01V " \
//	"1LLC1HHG111HH01V " \
//	"1HHC1LHG111HH01V " \
//	"1HLC1LHG111HH01V " \
//	"1LHC1LHG111HH01V " \
//	"1LLC1LHG111HH01V " \
//	"1HHC1HLG111HH01V " \
//	"1HLC1HLG111HH01V " \
//	"1LHC1HLG111HH01V " \
//	"1LLC1HLG111HH01V " \
//	"1HHC1LLG111HH01V " \
//	"1HLC1LLG111HH01V " \
//	"1LHC1LLG111HH01V " \
//	"1LL11LLG111HH01V " \
//	"1LL01LLG111HL01V " \
//	"1HH11HHG111HH01V " \
//	"1HH10HHG111LH01V " \
//	"1LL11LLG111HH01V " \
//	"1LH1CLLG111HH01V " \
//	"1HL1CLLG111HH01V " \
//	"1HH1CLLG111HH01V " \
//	"1LL1CHLG111HH01V " \
//	"1LH1CHLG111HH01V " \
//	"1HL1CHLG111HH01V " \
//	"1HH1CHLG111HH01V " \
//	"1LL1CLHG111HH01V " \
//	"1LL11LLG111HHC1V";

// 74194 : 4-bit bidirectional universal shift register with asynchronous reset
const char name_74194[] PROGMEM = "74194";
const char tests_74194[] PROGMEM = \
	"-araC/z0+bGbC/z1-aGaC/z+bybC*zd+rbC*zb-ybC/z+brdCfgzb-ydCfezb-ydCLeHzb-ydC*z1-aGdCehzd+ydCefz1-cGcCehz+bycC*z1-aGcCLeHz+brcCfez1-aGaCfez+byaCfez+bycCHfHz+bycCefz+bycCehz+bycC*z0+bGbC/V";

//	"0000000G00CLLLLV " \
//	"0111111G11CLLLLV " \
//	"1000000G00CLLLLV " \
//	"1111111G11CHHHHV " \
//	"1011110G11CHHHHV " \
//	"1100001G11CLLLLV " \
//	"1111110G10CLLLHV " \
//	"1100001G10CLLHHV " \
//	"1100001G10CLHHHV " \
//	"1100001G10CHHHHV " \
//	"1000000G10CHHHLV " \
//	"1011111G10CHHLLV " \
//	"1000001G01CHHHLV " \
//	"1111111G01CHHHHV " \
//	"1000000G01CLHHHV " \
//	"1111110G01CLLHHV " \
//	"1000000G00CLLHHV " \
//	"1111111G00CLLHHV " \
//	"1111111G01CHLLHV " \
//	"1111111G01CHHLLV " \
//	"1111111G01CHHHLV " \
//	"1111111G01CHHHHV " \
//	"0111111G11CLLLLV";

// 74195 : 4-bit universal shift register with J-/K inputs and asynchronous reset
const char name_74195[] PROGMEM = "74195";
const char tests_74195[] PROGMEM = \
	"-a0oCH/z1-aoCH/z1-aG1CH/z1c-G1CH/z1-aG1CH/zb1-G1CHfgzb-r1CHfhV";

//	"0000000G0CHLLLLV " \
//	"1000000G0CHLLLLV " \
//	"1000000G1CHLLLLV " \
//	"1010000G1CHLLLLV " \
//	"1000000G1CHLLLLV " \
//	"1110000G1CHLLLHV " \
//	"1100000G1CHLLHLV";

// 7420 : Dual 4-input NAND gates
const char name_7420[] PROGMEM = "7420";
const char tests_7420[] PROGMEM = \
	"-nv-0z1-tl-zcanvca0zbanvba0zacnvac0z1adtladzccnvcc0zbcnvbc0z+qx+1V";

//	"00000HGH00000V " \
//	"10000HGH10000V " \
//	"01000HGH01000V " \
//	"11000HGH11000V " \
//	"00010HGH00010V " \
//	"10010HGH10010V " \
//	"01010HGH01010V " \
//	"11010HGH11010V " \
//	"11111LGL11111V";

// 7421 : Dual 4-input AND gates
const char name_7421[] PROGMEM = "7421";
const char tests_7421[] PROGMEM = \
	"bXbtHbXbzcXcLxcXczdXdLxdXdzaXaLxaXaV";

//	"11X11HGH11X11V " \
//	"01X01LGL01X01V " \
//	"10X10LGL10X10V " \
//	"00X00LGL00X00V";

// 7422 : Dual 4-input open-collector NAND gates
const char name_7422[] PROGMEM = "7422";
const char tests_7422[] PROGMEM = \
	"-nv-0z1-tl-zcanvca0zbanvba0zacnvac0z1adtladzccnvcc0zbcnvbc0z-1tH-1z1actlaczca1tHca1zba1tHba1za0btHa0bz1abtlabzc0btHc0bzb0bLxb0bV";

//	"00000HGH00000V " \
//	"10000HGH10000V " \
//	"01000HGH01000V " \
//	"11000HGH11000V " \
//	"00010HGH00010V " \
//	"10010HGH10010V " \
//	"01010HGH01010V " \
//	"11010HGH11010V " \
//	"00001HGH00001V " \
//	"10001HGH10001V " \
//	"01001HGH01001V " \
//	"11001HGH11001V " \
//	"00011HGH00011V " \
//	"10011HGH10011V " \
//	"01011HGH01011V " \
//	"11011LGL11011V";

// 74237 : 1-of-8 noninverting decoder/demultiplexer with address latches
const char name_74237[] PROGMEM = "74237";
const char tests_74237[] PROGMEM = \
	"-dXGsssXza0bpG/fLz-cLG/fHz1-qG/gLzcacLG/HfzbacLGfgfLza1aqGfH/z1caqGg/Lz0baqv/fzb1a1t/fLV";

//	"000010XGXXXXXXXV " \
//	"000110LGLLLLLLLV " \
//	"000001LGLLLLLLHV " \
//	"100001LGLLLLLHLV " \
//	"010001LGLLLLHLLV " \
//	"110001LGLLLHLLLV " \
//	"001001LGLLHLLLLV " \
//	"101001LGLHLLLLLV " \
//	"011001LGHLLLLLLV " \
//	"111001HGLLLLLLLV";

// 74242 : 4-bit 3-state inverting bus transceiver
const char name_74242[] PROGMEM = "74242";
const char tests_74242[] PROGMEM = \
	"d*G-czd/G+cz-aG*aza+G/aV";

//	"10HHHHG000001V " \
//	"10LLLLG111101V " \
//	"000000GHHHH00V " \
//	"001111GLLLL00V";

// 74243 : 4-bit 3-state noninverting bus transceiver
const char name_74243[] PROGMEM = "74243";
const char tests_74243[] PROGMEM = \
	"d*G+czd/G-cza+G*az-aG/aV";

//	"10HHHHG111101V " \
//	"10LLLLG000001V " \
//	"001111GHHHH00V " \
//	"000000GLLLL00V";

// 7425 : Dual 4-input NOR gates with enable input
const char name_7425[] PROGMEM = "7425";
const char tests_7425[] PROGMEM = \
	"1caLGjcaz0baLGibazb1aLxb1azabpxab0zdbpxdb0z0bdLGibdz+px+0za1cLxa1cz1ccLGjccz0bcLGibczb1cLxb1czabqxab1zdbqxdb1z0+LGi+z+qx+1za1atHa1aV";

//	"10100LGL10100V " \
//	"01100LGL01100V " \
//	"11100LGL11100V " \
//	"00110LGL00110V " \
//	"10110LGL10110V " \
//	"01110LGL01110V " \
//	"11110LGL11110V " \
//	"00101LGL00101V " \
//	"10101LGL10101V " \
//	"01101LGL01101V " \
//	"11101LGL11101V " \
//	"00111LGL00111V " \
//	"10111LGL10111V " \
//	"01111LGL01111V " \
//	"11111LGL11111V " \
//	"00100HGH00100V";

// 74251 : 8-to-1 line 3-state data selector/multiplexer with complementary outputs
const char name_74251[] PROGMEM = "74251";
const char tests_74251[] PROGMEM = \
	"1c0gracc0z1c0hra1ccz1c0grca1cz1c0h0obccz1c0hr1accz1c0gr1cccz1c0hrba1cz1c0grb1ccV";

//	"1010LH0G0001010V " \
//	"1010HL0G0010101V " \
//	"1010LH0G0100101V " \
//	"1010HL0G0110101V " \
//	"1010HL0G1000101V " \
//	"1010LH0G1010101V " \
//	"1010HL0G1100101V " \
//	"1010LH0G1110101V";

// 74253 : 8-to-2 line 3-state noninverting data selector/multiplexer
const char name_74253[] PROGMEM = "74253";
const char tests_74253[] PROGMEM = \
	"1-nv-cz+btH+bz-aLx-az-ctl-0z-aLx-dz-dtHcadzc-Lx-azccatHa1a0V";

//	"100000HGH000001V " \
//	"111111HGH111111V " \
//	"000000LGL000000V " \
//	"000001HGH100000V " \
//	"000000LGL000010V " \
//	"000010HGH010010V " \
//	"010000LGL000000V " \
//	"010100HGH001000V";

// 74257 : 8-to-4 line 3-state noninverting data selector/multiplexer
const char name_74257[] PROGMEM = "74257";
const char tests_74257[] PROGMEM = \
	"anatHaHa1zbubtHbHb1zapaLxaLa0zaqcLxdjazcndtHcHc0z0bHbtHbHb0z1aLaLxaLa0zbpdLxcLc0z1cHctHdlazbubtHbHb0V";

//	"000H00HGH00H001V " \
//	"111H11HGH11H111V " \
//	"000L00LGL00L000V " \
//	"001L01LGL10L100V " \
//	"010H10HGH01H010V " \
//	"011H11HGH11H110V " \
//	"100L00LGL00L000V " \
//	"110L10LGL01L010V " \
//	"101H01HGH10H100V " \
//	"111H11HGH11H110V";

// 74258 : 8-to-4 line 3-state inverting data selector/multiplexer
const char name_74258[] PROGMEM = "74258";
const char tests_74258[] PROGMEM = \
	"anatHaHa1zbubtHbHb1zanatHaHa0zauctHdlazcpdLxcLc0z0bLbLxbLb0z1aHatHaHa0zbndtHcHc0z1cLcLxdjazbqbLxbLb0V";

//	"000H00HGH00H001V " \
//	"111H11HGH11H111V " \
//	"000H00HGH00H000V " \
//	"001H01HGH10H100V " \
//	"010L10LGL01L010V " \
//	"011L11LGL11L110V " \
//	"100H00HGH00H000V " \
//	"110H10HGH01H010V " \
//	"101L01LGL10L100V " \
//	"111L11LGL11L110V";

// 74259 : 1-of-8 addressable latch with reset
const char name_74259[] PROGMEM = "74259";
const char tests_74259[] PROGMEM = \
	"1a/G/c0zc0/G/b0za1/G/b0zanfLG/1az1agfG/1azc0fhG/1azb0fgG/1aza1/vfjaV";

//	"100LLLLGLLLL010V " \
//	"010LLLLGLLLL110V " \
//	"001LLLLGLLLL110V " \
//	"000HLLLGLLLL100V " \
//	"100LHLLGLLLL100V " \
//	"010LLHLGLLLL100V " \
//	"110LLLHGLLLL100V " \
//	"001LLLLGHLLL100V";

// 7426 : Quad 2-input open-collector high-voltage NAND gates
const char name_7426[] PROGMEM = "7426";
const char tests_7426[] PROGMEM = \
	"aHatHaHazdHdtHcHczcHctHdHdzbLbLxbLbV";

//	"00H00HGH00H00V " \
//	"10H10HGH01H01V " \
//	"01H01HGH10H10V " \
//	"11L11LGL11L11V";

// 74260 : Dual 5-input NOR gates
const char name_74260[] PROGMEM = "74260";
const char tests_74260[] PROGMEM = \
	"-eG-az1c0fG1ca1zccfGc0b0zbcfGb0b1zadfGabdz+fG+bz1a0fG1-0zbdfob1cz0b0fGb1c0zdbfGbabV";

//	"0000HHG000000V " \
//	"1010LLG101001V " \
//	"0101LLG010110V " \
//	"1101LLG110111V " \
//	"0010LLG001110V " \
//	"1111LLG111111V " \
//	"1000LLG100000V " \
//	"1110LLG011101V " \
//	"0110LLG111010V " \
//	"1011LLG110011V";

// 74266 : Quad 2-input open-collector XNOR gates
const char name_74266[] PROGMEM = "74266";
const char tests_74266[] PROGMEM = \
	"aeaGaeazdfdGdfdzcfcGcfczbebGbebV";

//	"00HH00G00HH00V " \
//	"10LL10G10LL10V " \
//	"01LL01G01LL01V " \
//	"11HH11G11HH11V";

// 7427 : Triple 3-input NOR gates
const char name_7427[] PROGMEM = "7427";
const char tests_7427[] PROGMEM = \
	"-nva0kza1aLGjajz1adLxc0izdbpxb0jzcaqxa1iz1ccLGjcjzb0bLGibiz+qxb1jV";

//	"00000HGH000H0V " \
//	"00100LGL100L1V " \
//	"10010LGL010L0V " \
//	"10110LGL110L1V " \
//	"01001LGL001L0V " \
//	"10101LGL101L1V " \
//	"11011LGL011L0V " \
//	"11111LGL111L1V";

// 7428 : Quad 2-input NOR gates with buffered outputs
const char name_7428[] PROGMEM = "7428";
const char tests_7428[] PROGMEM = \
	"HaHaGaHaHzLdLdGdLdLzLcLcGcLcLzLbLbGbLbLV";

//	"H00H00G00H00HV " \
//	"L10L10G10L10LV " \
//	"L01L01G01L01LV " \
//	"L11L11G11L11LV";

// 74280 : 9-bit odd/even parity generator/checker
const char name_74280[] PROGMEM = "74280";
const char tests_74280[] PROGMEM = \
	"1a1gGccczcahG1cc0zbcgG+bz-hG-azbcgG1-1z-go+1zbagoba1zachGdbaV";

//	"1001LHG010101V " \
//	"0100HLG101010V " \
//	"1101LHG111111V " \
//	"0000HLG000000V " \
//	"1101LHG100001V " \
//	"0000LHG011111V " \
//	"1100LHG011001V " \
//	"0001HLG101100V";

// 74283 : 4-bit binary full adder with fast carry.
const char name_74283[] PROGMEM = "74283";
const char tests_74283[] PROGMEM = \
	"LaLa0oLaLazLaHa1oLaLazHbHbyubHbzHcHcrncHdzHaLbrnaLbzLbHayqbHaV";

//	"L00L000G0L00L00V " \
//	"L00H001G0L00L00V " \
//	"H11H111G1H11H11V " \
//	"H01H010G0H01H10V " \
//	"H00L110G0H00L11V " \
//	"L11H001G1L11H00V";

// 74292 : 15-bit programmable frequency divider/digital timer
const char name_74292[] PROGMEM = "74292";
const char tests_74292[] PROGMEM = \
	"dXasG-XazdLmfGadLazdLmfGadLazdLmgGadLazdLmgGadLazdLmfGadLaV";

//	"10X00XXG0000X00V " \
//	"10LC0LLG0010L00V " \
//	"10LC0LLG0010L00V " \
//	"10LC0LHG0010L00V " \
//	"10LC0LHG0010L00V " \
//	"10LC0LLG0010L00V";

// 74293 : 4-bit asynchronous binary counter with /2 and /8 sections and reset
const char name_74293[] PROGMEM = "74293";
const char tests_74293[] PROGMEM = \
	"a0frf+za0frfbaza0frgcaza0frgbaza0grg1a0za0grgbaza0hrg1a0za0hrgbaza0erg1a0za0ergbaza0fre1a0za0frebaV";

//	"000LL0GLL1111V " \
//	"000LL0GLL1100V " \
//	"000LL0GLH0100V " \
//	"000LL0GLH1100V " \
//	"000LH0GLH1000V " \
//	"000LH0GLH1100V " \
//	"000HL0GLH1000V " \
//	"000HL0GLH1100V " \
//	"000HH0GLH1000V " \
//	"000HH0GLH1100V " \
//	"000LL0GHH1000V " \
//	"000LL0GHH1100V";

// 74294 : 15-bit programmable frequency divider/digital timer
const char name_74294[] PROGMEM = "74294";
const char tests_74294[] PROGMEM = \
	"dXmsGs0sazdLmXLGs1sazdLmXLGs1sazdLmXts1sazdLmXts1sazdLmXLGs1sazdLmXLGs1sazdLmXts1sazdLmXts1saV";

//	"10XC0XXGXX0XX00V " \
//	"10LC0XLGXX1XX00V " \
//	"10LC0XLGXX1XX00V " \
//	"10LC0XHGXX1XX00V " \
//	"10LC0XHGXX1XX00V " \
//	"10LC0XLGXX1XX00V " \
//	"10LC0XLGXX1XX00V " \
//	"10LC0XHGXX1XX00V " \
//	"10LC0XHGXX1XX00V";

// 74298 : 8-to-4 line noninverting data selector/multiplexer with output registers
const char name_74298[] PROGMEM = "74298";
const char tests_74298[] PROGMEM = \
	"1cadGdCggz1cadGbCHgLV";

//	"1010010G10CLHLHV " \
//	"1010010G11CHLHLV";

// 7430 : 8-input NAND gate
const char name_7430[] PROGMEM = "7430";
const char tests_7430[] PROGMEM = \
	"+bxab0z0+1vab0zd+vab0zb0b1vab0zbdbvab0z+cvab0z+dvab0z+bvac0z+bva1az1-rH-0V";

//	"111111GL00110V " \
//	"011111GH00110V " \
//	"101111GH00110V " \
//	"110111GH00110V " \
//	"111011GH00110V " \
//	"111101GH00110V " \
//	"111110GH00110V " \
//	"111111GH00010V " \
//	"111111GH00100V " \
//	"100000GH00000V";

// 7432 : Quad 2-input OR gates
const char name_7432[] PROGMEM = "7432";
const char tests_7432[] PROGMEM = \
	"aLaLxaLazcHctHdHdzdHdtHcHczbHbtHbHbV";

//	"00L00LGL00L00V " \
//	"01H01HGH10H10V " \
//	"10H10HGH01H01V " \
//	"11H11HGH11H11V";

// 74365 : 6-bit 3-state noninverting buffer/line driver
const char name_74365[] PROGMEM = "74365";
const char tests_74365[] PROGMEM = \
	"blltllHbzclltllHbzclltllHdzaiiLGiiLazblltllHdzclltllHbzdkktkkHazakktkkHcV";

//	"11H1H1HGH1H1H11V " \
//	"01H1H1HGH1H1H11V " \
//	"01H1H1HGH1H1H10V " \
//	"00L0L0LGL0L0L00V " \
//	"11H1H1HGH1H1H10V " \
//	"01H1H1HGH1H1H11V " \
//	"10H0H0HGH0H0H00V " \
//	"00H0H0HGH0H0H01V";

// 74366 : 6-bit 3-state inverting buffer/line driver
const char name_74366[] PROGMEM = "74366";
const char tests_74366[] PROGMEM = \
	"dkktkkHazakktkkHczblltllHbzclltllHbzcjjLGjjLdzakktkkHaV";

//	"10H0H0HGH0H0H00V " \
//	"00H0H0HGH0H0H01V " \
//	"11H1H1HGH1H1H11V " \
//	"01H1H1HGH1H1H11V " \
//	"01L1L1LGL1L1L10V " \
//	"00H0H0HGH0H0H00V";

// 74367 : 2/4-bit 3-state noninverting buffer/line driver
const char name_74367[] PROGMEM = "74367";
const char tests_74367[] PROGMEM = \
	"blltllHbzaiiLGiiLazclltllHdzaijtiiLazcX0X0XGX1X0XaV";

//	"11H1H1HGH1H1H11V " \
//	"00L0L0LGL0L0L00V " \
//	"01H1H1HGH1H1H10V " \
//	"00L0L1HGL0L0L00V " \
//	"01X0X0XGX1X0X00V";

// 74368 : 2/4-bit 3-state inverting buffer/line driver
const char name_74368[] PROGMEM = "74368";
const char tests_74368[] PROGMEM = \
	"blltllHbzdkktkkHazakktkkHazcjjLGjjLdV";

//	"11H1H1HGH1H1H11V " \
//	"10H0H0HGH0H0H00V " \
//	"00H0H0HGH0H0H00V " \
//	"01L1L1LGL1L1L10V";

// 7437 : Quad 2-input NAND gates with buffered output
const char name_7437[] PROGMEM = "7437";
const char tests_7437[] PROGMEM = \
	"aHatHaHazdHdtHdHdzcHctHcHczbLbLxbLbV";

//	"00H00HGH00H00V " \
//	"10H10HGH10H10V " \
//	"01H01HGH01H01V " \
//	"11L11LGL11L11V";

// 74375 : Dual 2-bit transparent latches with complementary outputs
const char name_74375[] PROGMEM = "74375";
const char tests_74375[] PROGMEM = \
	"0h1g0oh1g0z1g1hy1g1h1z1g0hy1g0h1z0g0h0og0h0V";

//	"0HL1LH0G0HL1LH0V " \
//	"1LH1HL1G1LH1HL1V " \
//	"1LH0HL1G1LH0HL1V " \
//	"0LH0HL0G0LH0HL0V";

// 7438 : Quad 2-input open-collector NAND gates with buffered output
const char name_7438[] PROGMEM = "7438";
const char tests_7438[] PROGMEM = \
	"aHatHaHazdHdtHdHdzcHctHcHczbLbLxbLbV";

//	"00H00HGH00H00V " \
//	"10H10HGH10H10V " \
//	"01H01HGH01H01V " \
//	"11L11LGL11L11V";

// 74386 : Quad 2-input XOR gates
const char name_74386[] PROGMEM = "74386";
const char tests_74386[] PROGMEM = \
	"afaGafazdedGdedzcecGceczbfbGbfbV";

//	"00LL00G00LL00V " \
//	"10HH10G10HH10V " \
//	"01HH01G01HH01V " \
//	"11LL11G11LL11V";

// 74390 : Dual 4-bit asynchronous decade counters with separate /2 and /5 sections and reset
const char name_74390[] PROGMEM = "74390";
const char tests_74390[] PROGMEM = \
	"cX0sXGsX0XdzaifLGfiLazmkfLGfikCzmiHfGfkiCzmkHfGfkkCzmigLGgiiCzmkgLGgikCzmieLxe0iCzmkeLxe0kCzmiftHf0iCzmkftHf0kCzmifLGfiiCV";

//	"01X0XXXGXXX0X10V " \
//	"00L0LLLGLLL0L00V " \
//	"C0H0LLLGLLL0H0CV " \
//	"C0L0HLLGLLH0L0CV " \
//	"C0H0HLLGLLH0H0CV " \
//	"C0L0LHLGLHL0L0CV " \
//	"C0H0LHLGLHL0H0CV " \
//	"C0L0HHLGLHH0L0CV " \
//	"C0H0HHLGLHH0H0CV " \
//	"C0L0LLHGHLL0L0CV " \
//	"C0H0LLHGHLL0H0CV " \
//	"C0L0LLLGLLL0L0CV";

// 74393 : Dual 4-bit asynchronous binary counters with reset
const char name_74393[] PROGMEM = "74393";
const char tests_74393[] PROGMEM = \
	"assGssazassGssazassGssazb/G/bzd/G/czaHfLGfgazdHfLGfgczagfGfhazdgfGfhczaefGfeazdefGfeczafhGgfazdfhGgfczaHgLGggazdHgLGggcV";

//	"00XXXXGXXXX00V " \
//	"00XXXXGXXXX00V " \
//	"00XXXXGXXXX00V " \
//	"11LLLLGLLLL11V " \
//	"10LLLLGLLLL01V " \
//	"00HLLLGLLLH00V " \
//	"10HLLLGLLLH01V " \
//	"00LHLLGLLHL00V " \
//	"10LHLLGLLHL01V " \
//	"00HHLLGLLHH00V " \
//	"10HHLLGLLHH01V " \
//	"00LLHLGLHLL00V " \
//	"10LLHLGLHLL01V " \
//	"00HLHLGLHLH00V " \
//	"10HLHLGLHLH01V";

// 7440 : Dual 4-input NAND gates with buffered output
const char name_7440[] PROGMEM = "7440";
const char tests_7440[] PROGMEM = \
	"-nv-0z1-tl-zcanvca0zbanvba0zacnvac0z1adtladzccnvcc0zbcnvbc0z+qx+1V";

//	"00000HGH00000V " \
//	"10000HGH10000V " \
//	"01000HGH01000V " \
//	"11000HGH11000V " \
//	"00010HGH00010V " \
//	"10010HGH10010V " \
//	"01010HGH01010V " \
//	"11010HGH11010V " \
//	"11111LGL11111V";

// 7442 : 1-of-10 inverting decoder/demultiplexer
const char name_7442[] PROGMEM = "7442";
const char tests_7442[] PROGMEM = \
	"L*eGeH-zh*teHaczeL*GeHadzeheteHabz*LeGeHcaz*HgGeHccz*eLGekb0z*etLe0b1z*etHg1a0z*eteja1V";

//	"LHHHHHHGHHH0000V " \
//	"HLHHHHHGHHH0001V " \
//	"HHLHHHHGHHH0010V " \
//	"HHHLHHHGHHH0011V " \
//	"HHHHLHHGHHH0100V " \
//	"HHHHHLHGHHH0101V " \
//	"HHHHHHLGHHH0110V " \
//	"HHHHHHHGLHH0111V " \
//	"HHHHHHHGHLH1000V " \
//	"HHHHHHHGHHL1001V";

// 7446 : Open-collector BCD to 7-segment decoder/common-anode LED driver with ripple blank input and output
const char name_7446[] PROGMEM = "7446";
const char tests_7446[] PROGMEM = \
	"a1laG/gLzauayefeHz1claGfHfgz1cHa1v/gz0blaGefHfz0bHa1vfHfLzb1laGfLefzbuayefLezaubr/fLza1kbGe/LV";

//	"001H100GLLLLLHLV " \
//	"001H001GHHLLHHHV " \
//	"101H100GLLHLLLHV " \
//	"101H001GHLLLLLHV " \
//	"011H100GHHLLHLLV " \
//	"011H001GHLLHLLLV " \
//	"111H100GLLLHHLLV " \
//	"111H001GHHLLLHHV " \
//	"001H110GLLLLLLLV " \
//	"001H011GHHLLLLLV";

// 7447 : Open-collector BCD to 7-segment decoder/common-anode LED driver with ripple blank input and output
const char name_7447[] PROGMEM = "7447";
const char tests_7447[] PROGMEM = \
	"a1laG/gLzauayefeHz1claGfHfgz1cHa1v/gz0blaGefHfz0bHa1vfHfLzb1laGfLefzbuayefLezaubr/fLza1kbGe/LV";

//	"001H100GLLLLLHLV " \
//	"001H001GHHLLHHHV " \
//	"101H100GLLHLLLHV " \
//	"101H001GHLLLLLHV " \
//	"011H100GHHLLHLLV " \
//	"011H001GHLLHLLLV " \
//	"111H100GLLLHHLLV " \
//	"111H001GHHLLLHHV " \
//	"001H110GLLLLLLLV " \
//	"001H011GHHLLLLLV";

// 7450 : Dual 2-Wide 2-Input AND/OR Invert Gate
const char name_7450[] PROGMEM = "7450";
const char tests_7450[] PROGMEM = \
	"-nvac0z+qxb0bzbcnGladz1abLxa0bV";

//	"00000HGH00010V " \
//	"11111LGL11011V " \
//	"11010HGH10010V " \
//	"10011LGL00011V";

// 7451 : 2-wide 2-input and 2-wide 3-input AND-NOR gates
const char name_7451[] PROGMEM = "7451";
const char tests_7451[] PROGMEM = \
	"1-tLba1zcanvca1z1catl-z0baLv-0zacnGl-z-1tLba0za0bLvca0zdbnv-0zba1tL-1z0+Lv-1V";

//	"10000HGL11001V " \
//	"01000HGH01001V " \
//	"10100HGH10000V " \
//	"01100LGH00000V " \
//	"00010HGH10000V " \
//	"00001HGL11000V " \
//	"00011LGH01000V " \
//	"10110HGH00000V " \
//	"11001HGL00001V " \
//	"01111LGH00001V";

// 7455 : 2-wide 4-input AND-NOR gate
const char name_7455[] PROGMEM = "7455";
const char tests_7455[] PROGMEM = \
	"+aGj-z-ax+1z1-rHb0bzc-Glabzb-vb1cza1arlccz1carHba1z0barlaczb1arH+0zacavdb0V";

//	"111100GL10000V " \
//	"000000GL11111V " \
//	"100000GH11011V " \
//	"010000GH10011V " \
//	"110000GH11101V " \
//	"001000GH10101V " \
//	"101000GH11001V " \
//	"011000GH10001V " \
//	"111000GH11110V " \
//	"000100GH10110V";

// 7458 : 2-wide 2-input and 2-wide 3-input AND-OR gates
const char name_7458[] PROGMEM = "7458";
const char tests_7458[] PROGMEM = \
	"+1tH+1zb1atHa0bz-px-0V";

//	"11111HGH11111V " \
//	"11100HGH00011V " \
//	"00000LGL00000V";

// 74589 : 8-bit 3-state parallel-in serial-out shift register with input registers
const char name_74589[] PROGMEM = "74589";
const char tests_74589[] PROGMEM = \
	"1cccGXdCb0z1cccGlac0z1cccGlab0z1cccGjmb0z1cccGlmb0z1cccGjCcaz1cccGlCcaV";

//	"1010101GX10C110V " \
//	"1010101GH100010V " \
//	"1010101GH100110V " \
//	"1010101GL1C0110V " \
//	"1010101GH1C0110V " \
//	"1010101GL1C0100V " \
//	"1010101GH1C0100V";

// 74595 : 8-bit 3-state serial-in parallel-out shift register with output registers
const char name_74595[] PROGMEM = "74595";
const char tests_74595[] PROGMEM = \
	"sssXGX-0Xz/fLGj-Lz/fLGjCaqz/fLGjCaqz/fLGjCaqz/fLGjCaqzeH/xdCcHV";

//	"XXXXXXXGX00000XV " \
//	"LLLLLLLGL10000LV " \
//	"LLLLLLLGL1C001LV " \
//	"LLLLLLLGL1C001LV " \
//	"LLLLLLLGL1C001LV " \
//	"LLLLLLLGL1C001LV " \
//	"HHHLLLLGL10C01HV";

// 74597 : 8-bit parallel-in serial-out shift register with input registers
const char name_74597[] PROGMEM = "74597";
const char tests_74597[] PROGMEM = \
	"1cccGXaCb0z1cccxdCc0z1cccxdCc0z1cccGlmb0z1cccGjmb0V";

//	"1010101GX00C110V " \
//	"1010101GL10C010V " \
//	"1010101GL10C010V " \
//	"1010101GH1C0110V " \
//	"1010101GL1C0110V";

// 7460 : Dual 4-Input Expander
const char name_7460[] PROGMEM = "7460";
const char tests_7460[] PROGMEM = \
	"+bGqejz1ccrufkzcccGnflz-aGnfkV";

//	"111111G1LHHL1V " \
//	"101010G1HLLH0V " \
//	"010101G0HLLH1V " \
//	"000000G0HLLH0V";

// 7461 : Three expanders three entries
const char name_7461[] PROGMEM = "7461";
const char tests_7461[] PROGMEM = \
	"+bGeHb1z1ccrfjczcccGfLc0z-aGfLa0zb1argLa0za0b1vfa0z-aGfHb1V";

//	"111111GHHH111V " \
//	"101010GLLL101V " \
//	"010101GLLL010V " \
//	"000000GLLL000V " \
//	"111000GLHL000V " \
//	"000111GHLL000V " \
//	"000000GLLH111V";

// 7462 : Expanders 3-2-2-3-entries
const char name_7462[] PROGMEM = "7462";
const char tests_7462[] PROGMEM = \
	"+qv+1z-nx-0zbapv-0zabqv-0z-pvb1az-pva0bz1cctjcczccnxcc0V";

//	"11111LGH11111V " \
//	"00000HGL00000V " \
//	"11000LGH00000V " \
//	"00111LGH00000V " \
//	"00000LGH11100V " \
//	"00000LGH00011V " \
//	"10101HGL10101V " \
//	"01010HGL01010V";

// 7465 : Porta AND-OR-NOT de 4-2-3-2 Entries open collector
const char name_7465[] PROGMEM = "7465";
const char tests_7465[] PROGMEM = \
	"-av-0zcccGlccz1ccrHcc0z+bx+1z0barL-0za0b1x-0z-axb1az1-rLa0bV";

//	"000000GH00000V " \
//	"010101GH10101V " \
//	"101010GH01010V " \
//	"111111GL11111V " \
//	"011000GL00000V " \
//	"000111GL00000V " \
//	"000000GL11100V " \
//	"100000GL00011V";

// 7472 : AND gated J-K master-slave flip-flop, asynchronous preset and clear
const char name_7472[] PROGMEM = "7472";
const char tests_7472[] PROGMEM = \
	"ab1tLa0C1zcapvb1mzcapva0C1zcapGlaC1zcapvb0C1zcanxb1C1zcanxa0C1z0batLa0C1z0bdtLa0C1z0+Lva0C1z0+tLb1C1z0+Lvb1C1zc0bLGkbC1V";

//	"00111HGL000C1V " \
//	"01000LGH111C0V " \
//	"01000LGH000C1V " \
//	"01000LGH100C1V " \
//	"01000LGH110C1V " \
//	"01000HGL111C1V " \
//	"01000HGL000C1V " \
//	"01100HGL000C1V " \
//	"01110HGL000C1V " \
//	"01111LGH000C1V " \
//	"01111HGL111C1V " \
//	"01111LGH111C1V " \
//	"01011LGH011C1V";

// 7474 : Dual D flip-flop with set and reset
const char name_7474[] PROGMEM = "7474";
const char tests_7474[] PROGMEM = \
	"cC1gGh1a0zdmhGh1a0zdC1gGh1a0zbC1hGh1a0zacgGh1CdzacgGg0CczacgGh1CczacgGg1CbV";

//	"01C1LHGHL1000V " \
//	"10C0HLGHL1000V " \
//	"10C1LHGHL1000V " \
//	"11C1HLGHL1000V " \
//	"0001LHGHL1C10V " \
//	"0001LHGLH0C01V " \
//	"0001LHGHL1C01V " \
//	"0001LHGLH1C11V";

// 7485 : 4-bit noninverting magnitude comparator with cascade inputs
const char name_7485[] PROGMEM = "7485";
const char tests_7485[] PROGMEM = \
	"caHfGcc0bz1a1ft1ccazbaHfG1ccczacftccc0zbaHfG1a1a1zacfHob0b0zbaHfob1a1zacft1a0b0z1aufGaba1zcaftbab0z1c0gLGaba1zccfLGbab0V";

//	"0100HLLG0101011V " \
//	"1001LLHG1010100V " \
//	"1100HLLG1010101V " \
//	"0001LLHG0101010V " \
//	"1100HLLG1001001V " \
//	"0001LLHG0110110V " \
//	"1100HLLG0111001V " \
//	"0001LLHG1000110V " \
//	"1001HLLG0011001V " \
//	"0100LLHG1100110V " \
//	"1010LHLG0011001V " \
//	"0101LLLG1100110V";

// 7486 : Quad 2-input XOR gates
const char name_7486[] PROGMEM = "7486";
const char tests_7486[] PROGMEM = \
	"aLaLxaLazcHctHcHczdHdtHdHdzbLbLxbLbV";

//	"00L00LGL00L00V " \
//	"01H01HGH01H01V " \
//	"10H10HGH10H10V " \
//	"11L11LGL11L11V";

const char* ic_tests[] = {
	name_74273, tests_74273,
	name_74373, tests_74373,
	name_74374, tests_74374,
	name_74240, tests_74240,
	name_74244, tests_74244,
	name_74245, tests_74245,
	name_4000, tests_4000,
	name_4001, tests_4001,
	name_4002, tests_4002,
	name_4009, tests_4009,
	name_4010, tests_4010,
	name_40106, tests_40106,
	name_4011, tests_4011,
	name_4012, tests_4012,
	name_4013, tests_4013,
	name_4015, tests_4015,
	name_4016, tests_4016,
	name_40161, tests_40161,
	name_40162, tests_40162,
	name_4017, tests_4017,
	name_40174, tests_40174,
	name_40175, tests_40175,
	name_4018, tests_4018,
	name_4019, tests_4019,
	name_40192, tests_40192,
	name_40193, tests_40193,
	name_4020, tests_4020,
	name_4022, tests_4022,
	name_4023, tests_4023,
	name_4024, tests_4024,
	name_4025, tests_4025,
	name_4027, tests_4027,
	name_4028, tests_4028,
	name_4029, tests_4029,
	name_4030, tests_4030,
	name_4031, tests_4031,
	name_4040, tests_4040,
	name_4041, tests_4041,
	name_4042, tests_4042,
	name_4043, tests_4043,
	name_4044, tests_4044,
	name_4048, tests_4048,
	name_4049, tests_4049,
	name_4051, tests_4051,
	name_4053, tests_4053,
	name_4066, tests_4066,
	name_4068, tests_4068,
	name_4069, tests_4069,
	name_4070, tests_4070,
	name_4071, tests_4071,
	name_4072, tests_4072,
	name_4073, tests_4073,
	name_4075, tests_4075,
	name_4076, tests_4076,
	name_4077, tests_4077,
	name_4078, tests_4078,
	name_4081, tests_4081,
	name_4082, tests_4082,
	name_4093, tests_4093,
	name_4094, tests_4094,
	name_4098, tests_4098,
	name_4503, tests_4503,
	name_4510, tests_4510,
	name_4511, tests_4511,
	name_4512, tests_4512,
	name_4518, tests_4518,
	name_4519, tests_4519,
	name_4520, tests_4520,
	name_4529, tests_4529,
	name_4532, tests_4532,
	name_4543, tests_4543,
	name_4572, tests_4572,
	name_7400, tests_7400,
	name_7401, tests_7401,
	name_7402, tests_7402,
	name_7403, tests_7403,
	name_7404, tests_7404,
	name_7405, tests_7405,
	name_7406, tests_7406,
	name_7407, tests_7407,
	name_7408, tests_7408,
	name_7409, tests_7409,
	name_7410, tests_7410,
	name_74107, tests_74107,
	name_74109, tests_74109,
	name_7411, tests_7411,
	name_74112, tests_74112,
	name_74113, tests_74113,
	name_7412, tests_7412,
	name_74123, tests_74123,
	name_74125, tests_74125,
	name_74126, tests_74126,
	name_7413, tests_7413,
	name_74132, tests_74132,
	name_74133, tests_74133,
	name_74136, tests_74136,
	name_74137, tests_74137,
	name_74138, tests_74138,
	name_74139, tests_74139,
	name_7414, tests_7414,
	name_74140, tests_74140,
	name_74145, tests_74145,
	name_74147, tests_74147,
	name_74148, tests_74148,
	name_7415, tests_7415,
	name_74151, tests_74151,
	name_74153, tests_74153,
	name_74157, tests_74157,
	name_74158, tests_74158,
	name_7416, tests_7416,
	name_74160, tests_74160,
	name_74161, tests_74161,
	name_74162, tests_74162,
	name_74163, tests_74163,
	name_74164, tests_74164,
	name_74165, tests_74165,
	name_74166, tests_74166,
	name_7417, tests_7417,
	name_74173, tests_74173,
	name_74174, tests_74174,
	name_74175, tests_74175,
	name_7418, tests_7418,
	name_74182, tests_74182,
	name_74190, tests_74190,
	name_74191, tests_74191,
	name_74192, tests_74192,
	name_74193, tests_74193,
	name_74194, tests_74194,
	name_74195, tests_74195,
	name_7420, tests_7420,
	name_7421, tests_7421,
	name_7422, tests_7422,
	name_74237, tests_74237,
	name_74242, tests_74242,
	name_74243, tests_74243,
	name_7425, tests_7425,
	name_74251, tests_74251,
	name_74253, tests_74253,
	name_74257, tests_74257,
	name_74258, tests_74258,
	name_74259, tests_74259,
	name_7426, tests_7426,
	name_74260, tests_74260,
	name_74266, tests_74266,
	name_7427, tests_7427,
	name_7428, tests_7428,
	name_74280, tests_74280,
	name_74283, tests_74283,
	name_74292, tests_74292,
	name_74293, tests_74293,
	name_74294, tests_74294,
	name_74298, tests_74298,
	name_7430, tests_7430,
	name_7432, tests_7432,
	name_74365, tests_74365,
	name_74366, tests_74366,
	name_74367, tests_74367,
	name_74368, tests_74368,
	name_7437, tests_7437,
	name_74375, tests_74375,
	name_7438, tests_7438,
	name_74386, tests_74386,
	name_74390, tests_74390,
	name_74393, tests_74393,
	name_7440, tests_7440,
	name_7442, tests_7442,
	name_7446, tests_7446,
	name_7447, tests_7447,
	name_7450, tests_7450,
	name_7451, tests_7451,
	name_7455, tests_7455,
	name_7458, tests_7458,
	name_74589, tests_74589,
	name_74595, tests_74595,
	name_74597, tests_74597,
	name_7460, tests_7460,
	name_7461, tests_7461,
	name_7462, tests_7462,
	name_7465, tests_7465,
	name_7472, tests_7472,
	name_7474, tests_7474,
	name_7485, tests_7485,
	name_7486, tests_7486,
};
